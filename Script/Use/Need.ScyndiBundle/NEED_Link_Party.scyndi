// License:
// 	  src/Script/Script/Use/Need.ScyndiBundle/NEED_Link_Party.scyndi
// 
// 	  Version: 25.04.02 II
// 	
// 	  Copyright (C) 2019, 2020, 2025 Jeroen Petrus Broks
// 	
// 	  ===========================
// 	  This file is part of a project related to the Phantasar Chronicles or another
// 	  series or saga which is property of Jeroen P. Broks.
// 	  This means that it may contain references to a story-line plus characters
// 	  which are property of Jeroen Broks. These references may only be distributed
// 	  along with an unmodified version of the game.
// 
// 	  As soon as you remove or replace ALL references to the storyline or character
// 	  references, or any termology specifically set up for the Phantasar universe,
// 	  or any other univers a story of Jeroen P. Broks is set up for,
// 	  the restrictions of this file are removed and will automatically become
// 	  zLib licensed (see below).
// 
// 	  Please note that doing so counts as a modification and must be marked as such
// 	  in accordance to the zLib license.
// 	  ===========================
// 
// 
// 	  zLib license terms:
// 	
// 	  This software is provided 'as-is', without any express or implied
// 	  warranty.  In no event will the authors be held liable for any damages
// 	  arising from the use of this software.
// 
// 	  Permission is granted to anyone to use this software for any purpose,
// 	  including commercial applications, and to alter it and redistribute it
// 	  freely, subject to the following restrictions:
// 	
// 	  1. The origin of this software must not be misrepresented; you must not
// 	     claim that you wrote the original software. If you use this software
// 	     in a product, an acknowledgment in the product documentation would be
// 	     appreciated but is not required.
// 	  2. Altered source versions must be plainly marked as such, and must not be
// 	     misrepresented as being the original software.
// 	  3. This notice may not be removed or altered from any source distribution.
// End License

Module

#use "Libs/SCI/Sys"
#use "Libs/SCI/Events"
#use "Libs/SCI/Sstring"

#use "Script/Use/Need.ScyndiBundle/NEED_Convert_Flow"
#use "Script/Use/Need.ScyndiBundle/NEED_Convert_RPG"

Init
	Events.Poll()
End

void LoadSub()
	if ! StateExists("PARTY")
		LoadState("PARTY","Script/Subs/SubParty.nil")
	end
end

void PtExe(string command)
	Lua.error("PtExe may no longer be used!")	
	//LoadSub()
	//LuaDoString("PARTY",command,"Call sub: PARTY") // Since the Lua and NIL instructions would both be the same, using NIL is pointless and would only down the real-time performance.
end

Var ptCall(String command,Infinity)
	LoadSub()
	Return Sys.Call("PARTY",command,Infinity)
End


group Party

	void LvUpSound()
		PtCall("SubParty.AudioLevelUp.Play")
	end

	void NewCharacter(string tag,int startlevel)
		//PtExe(sprintf("SubParty.NewCharacter(\"%s\",%d)",tag,startlevel))
		PtCall("SubParty.NewCharacter",tag,startlevel)
	end 
	
	void SetLevelStats(string tag, int startlevel)
		//PtExe(sprintf("SubParty.SetLevelStats(\"%s\",%d)",tag,startlevel))
		PtCall("SubParty.SetLevelStats",tag,startlevel)
	end
	
	void ShowBar()
		//PtExe("SubParty.CharBar()")
		PtCall("SubParty.CharBar")
	end
	
	set string SelectedCharacterTag
		for i=1,8
			if RPG.Party[i]==value
				self.SelectedCharacter=i
			end
		end
	end

	get int SelectedCharacter
		LoadSub()
		//return LuaGetInt("PARTY","SubParty.SelectedChar")
		r:=PtCall("SubParty.GetSelectedChar")
	end

	set int SelectedCharacter
		// TODO: Change!
		//PtExe(sprintf("SubParty.SelectedChar = %d",value))
		PtCall("SubParty.SetSelectedChar",value)
	end
	
	
	int CharSpot(string tag)
		for i=1,8
			if RPG.Party[i]==tag
				return i
			end
		end
		return -1
	end

	void Click()
		LoadSub()
		PtCall("SubParty.Click")
	end
	
	void LvUp(infinity)
		table chars
		chars = { infinity }
		if chars[1]==nil
			for i=1, 8 
				if RPG.Party[i] && RPG.Party[i]!=""
					self.LvUp(RPG.Party[i])
				end
			end
		else
			for _,ch in pairs(chars)
				var S
				S = RPG.GetChar(ch).Stat("Experience")
				if S.Value>0 && ch!="Kirana"
					S.Value=0
				end
			end
		end
	end
	
	void Recover(string ChT="*ALL*")
		if ChT=="*ALL*"
			for i=1, 8 
				if RPG.Party[i] && RPG.Party[i]!=""
					self.Recover(RPG.Party[i])
				end
			end
			return
		end
		RPG.Char(ChT).Points("HP").Have=RPG.Char(ChT).Points("HP").Maximum
		RPG.Char(ChT).Points("VIT").Have=RPG.Char(ChT).Points("VIT").Maximum
	End

end
