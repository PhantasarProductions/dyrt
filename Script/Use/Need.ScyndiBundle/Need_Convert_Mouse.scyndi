// License:
// 	src/Script/Script/Use/Need.ScyndiBundle/Need_Convert_Mouse.scyndi
// 	Mouse
// 	version: 25.03.18
// 
// 	Copyright (C) 2025 Jeroen P. Broks
// 
// 	This software is provided 'as-is', without any express or implied
// 	warranty.  In no event will the authors be held liable for any damages
// 	arising from the use of this software.
// 
// 	Permission is granted to anyone to use this software for any purpose,
// 	including commercial applications, and to alter it and redistribute it
// 	freely, subject to the following restrictions:
// 
// 	1. The origin of this software must not be misrepresented; you must not
// 	   claim that you wrote the original software. If you use this software
// 	   in a product, an acknowledgment in the product documentation would be
// 	   appreciated but is not required.
// 	2. Altered source versions must be plainly marked as such, and must not be
// 	   misrepresented as being the original software.
// 	3. This notice may not be removed or altered from any source distribution.
// End License
Module

#use "Libs/SCI/Events"
#use "Libs/SCI/Graphics"

Group Mouse

#region "Mouse Pointer"
	String _Pointer
	Var _ImgPointer
	
	Get String Pointer
		Return _Pointer
	end
	
	Set String Pointer
		_Pointer = Value
		_ImgPointer = LoadImage(Value,"DYRT_SYSTEM_MOUSEPOINTER")
	End
#endregion

#region "Sleeping Pointer"
	String _PointerSleep
	Var _ImgPointerSleep
	
	Get String SleepPointer
		Return _PointerSleep
	end
	
	Set String SleepPointer
		_PointerSleep = Value
		_ImgPointerSleep = LoadImage(Value,"DYRT_SYSTEM_MOUSEPOINTERSLEEP")
	End
#endregion
	
	Get Int X
		Return Events.MouseX
	End
	
	Get Int Y
		Return Events.MouseY
	End
	
	Table PA = {}	
	Void Show(Sleeping)
		Sleeping = Sleeping == true
		_ImgPointerSleep = _ImgPointerSleep || ObtainImage("DYRT_SYSTEM_MOUSEPOINTERSLEEP")
		_ImgPointer = _ImgPointer || ObtainImage("DYRT_SYSTEM_MOUSEPOINTER")
		PA[Sleeping] = Ternary(Sleeping,_ImgPointerSleep,_ImgPointer)
		Lua.assert(PA[Sleeping],sprintf("NIL for pointer '%s'",Sleeping))
		PA[Sleeping].Draw(Events.MouseX,Events.MouseY)
	End
	
	Get Bool HitLeft
		return Events.MouseHitLeft
	End

	Get Bool HitRight
		return Events.MouseHitRight
	End
	
	Get Bool HeldLeft
		Return Events.MouseDownLeft
	End
	
End
