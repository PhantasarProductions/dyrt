// License Information:
// **********************************************
// 
// src/Tricky Script/Script/Use/Anyway/LanguageSettings.nil
// (c) Jeroen Broks, 2019, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 20.04.28
// End License Information




#say "Language"
#use "Script/Use/Link/GameVars.nil"
#use "Libs/LinkedList"

table EnglishNames 
global table Languages 
Languages = { ["EN"] = "English", ["NL"] = "Dutch" }

// this works quicker
#pure
EnglishNames = {
   Eric = "Eric",
   Irravonia = "Irravonia",
   Brendor = "Brendor",
   PreScyndi = "Seelah Gandra",
   PostScyndi = "Scyndi",
   Rebecca = "Rebecca",
   Dernor = "Dernor",
   Merya = "Merya",
   Aziella = 'Azi|"ella',
   Shanda = 'Shanda',
   Kirana = 'Kirana'
}
#endpure

global table Names
table LangToNames 
table MetaNames

#say "Meta-Name Index"
MetaNames.__index = string(t,k) 
	table chktable
	string ret
	chktable = LangToNames[__lang] or EnglishNames
	if k=="Yasathar"
		ret = chktable.Eric
	else
		ret = chktable[k] 
	end
	assert(ret,sprintf("No name tied for character %s in language %s or the English language table!",k,__lang))
	return ret
end

#say "No new index!"
MetaNames.__newindex = string(t,k,v) 
	error("Name Table is read-only")
end

#say "What more?"
void ignore()
end

MetaNames.__call = void(t,lang) 
	for k,_ in pairs(EnglishNames)
		switch k
			case "PostScyndi" "PreScyndi"
				gv.String.Scyndi = Names.PreScyndi
				gv.String.SCYNDI = Names.PreScyndi
				CSayF("For now Scyndi will be called %s as her new name will be chosen later, after all",gv.String.SCYNDI)
			case "Yasathar"
				gv.String.Yasathar = Names.Eric
			default
				gv.String[k:upper()] = Names[k]
				gv.String[k] = Names[k]
				CSayF("$%s = %s",k:upper(),gv.String[k:upper()])
		end
	end
end

setmetatable(Names,MetaNames)
