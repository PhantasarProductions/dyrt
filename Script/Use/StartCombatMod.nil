// License Information:
// src/Tricky Script/Script/Use/StartCombatMod.nil
// Version: 19.11.09
// Copyright (C)  Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information



#use "libs/strings"

void CombatLoaded()
	assert(StateExists("FLOW_COMBAT"),"Combat session not started!")
end

string qv(v)
	switch type(v)
		case "string"
			return '"'..SafeString(v)..'"'
		case "number" "boolean"
			return tostring(v)
		case "table"
			string r = "{"
			for k2,v2 in pairs(v)
				if r!="{"
					r = r ..", "
				end
				assert(type(k2)!="table","To tables for key allowed!")
				r = r .. "["..qv(k2).."] = "..qv(v2)
			end
			return r
		case "nil"
			return "nil"
		default
			error("Cannot process type "..type(v))
	end
end

quickmeta group StartCombatFoe
	newindex
		CombatLoaded()
		LuaDoString("FLOW_COMBAT","Combat_Start.Foe["..key.."] = "..qv(value))
	end
end

quickmeta group StartCombat

	newindex
		CombatLoaded()
		LuaDoString("FLOW_COMBAT","Combat_Start['"..key.."'] = "..qv(value),"COMBATSTART.NI."..key)
	end
	
	index
		assert(type(key)=="string","String expected!")
		if key!="StartSession"
			CombatLoaded()
		end
		switch key
			case "StartSession"
				return void()
					assert(not StateExists("FLOW_COMBAT"),"There's already an open combat session!")
					CSay("Starting combat session!")
					LoadFlow("FLOW_COMBAT","Script/Flow/Combat.nil")
				end
			case "Ready"
				return void()
					CombatLoaded()
					LuaDoString("FLOW_COMBAT","LetsGetReadyToRumble()","Let's get ready to rumble!")
				end
			case "Foe" "Enemy"
				return StartCombatFoe
			default
				return void(infinity)
					string wrk
					wrk = "Combat_Start['"..key.."']("
					for i,v in ipairs{infinity}
						if i>1
							wrk = wrk .. ", "
						end
						wrk = wrk .. qv(v)
					end
					wrk = wrk ..")"
					LuaDoString("FLOW_COMBAT",wrk,"COMBATSTART.N."..key)
				end
		end
	end
	
	len
		return math.random(1,1000)
	end
	
	tostring
		return "Begin the madness!"
	end

end




