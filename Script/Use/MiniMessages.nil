// License Information:
// **********************************************
// 
// src/Tricky Script/Script/Use/MiniMessages.nil
// (c) Jeroen Broks, 2019, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 20.04.28
// End License Information


#use "Libs/DarkText"

class MiniMsg

	static int sinner
	
	static number radbraker()
		return $sinner * (math.pi/180) 
	end
	
	static number TheSin()
		if $sinner>=360
			$sinner = $sinner - 360
		end
		return math.sin( $radbraker() )
	end
	
	static number Modifier()
		return math.abs( 0.5 * $TheSin() ) + 0.5
	end
	
	static void MyColor(int r, int g, int b)
		Color( math.floor(r * $Modifier() ), math.floor(g * $Modifier() ), math.floor(b * $Modifier() ) )
	end
	
	static var Font
	static var List
	
	
	static int LastY
	
	static int AutoCount
	
	int R
	int G
	int B
	string msg
	var msgfnt
	int X
	int Y
	int CD1 = 250
	int CD2 = 500
	int ID
	
	void CONSTRUCTOR(int startx, int starty, string message, cr, cg, cb)
		self.Font = self.Font or GetFont("SYSFONT")
		self.List = self.List or new TLinkedList
		self.R = cr or 255
		self.G = cg or 255
		self.B = cb or 255
		self.msg = message
		self.msgfnt = self.Font.Text(message)
		self.Y = starty - self.msgfnt.Height
		self.X = startx - math.floor(self.msgfnt.Width/2)
		if self.X<10 
			self.X=10
		end
		if self.Y<10
			self.Y=10
		end
		self.AutoCount++
		self.ID=self.AutoCount
		CSayF("MiniMessage %d created",self.ID)
		self.List.AddLast(self)
	end
	
	static void CreateCenter(string msg,r,g,b)
		return new MiniMsg(Screen.W/2,Screen.H/2,msg,r,g,b)
	end
	
	void DESTRUCTOR()
		// Debug to see if the memory is indeed properly released!
		CSayF("MiniMessage %d destroyed!   CD(%d,%d)",self.ID,self.CD1,self.CD2)
	end
	
	void Draw()
		int oldx
		int oldy
		oldx = $X
		oldy = $Y
		if $CD1<=0
			if $X>10
				$X--
			end
			if $Y>$LastY
				$Y--
			elseif $Y<$LastY
				$Y++
			end
			if oldx==$X and oldy==$Y
				--$CD2
			end
		else
			--$CD1
		end
		$MyColor($R,$G,$B)
		DarkText.Text($msgfnt,$X,$Y)
	end
	
	static void DrawAll()
		self.List = self.List or new TLinkedList
		$LastY=10
		MiniMsg.sinner++
		for msg,lnk in $List.Each
			msg.Draw()
			if msg.CD2==0
				lnk.UnLink()
			end
			$LastY = $LastY+25
		end
	end
end
