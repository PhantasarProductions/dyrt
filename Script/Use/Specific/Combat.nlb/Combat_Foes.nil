// License Information:
// src/Tricky Script/Script/Use/Specific/Combat.nlb/Combat_Foes.nil
// Version: 19.11.13
// Copyright (C)  Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

#use "libs/DarkText"
#use "Script/Use/Anyway"

#accept CombatTime
#accept Combat_Start

class Foe extends Fighter

	// Parameters all Foe data scripts respond to
	static bool LoadOversoul
	static string LoadFoeTag
	static int LoadFoeID
	
	// SubStats
	static table StatSubs 

	// Foe specific data
	table AI_Moves
	string AI_Module
	var AI_Data
	table Fatal
	int Experience
	var Image
	var Image_Neg
	string Description
	int FoeID
	bool AllowOversoul
	bool Boss
	string FromFile
	int Cash
	table Drop
	int FlickStance = 0
	
	get bool ShowHP
		switch __skill
			case 1
				return true
			case 2
				return gv.Int[sprintf('Defeated_%s',self.FromFile)]>0
			case 3
				return false
			default
				error("Four skills or more?")
		end
	end
	
	void Init()
	end
	
	string GetTeamName()
		return "Foe"
	end
	
	get string Letter
		assert(self.FoeID>=0,"Negative Foe Number!")
		if self.FoeID<=26
			return string.char(64+self.FoeID)
		elseif self.FoeID<=701
			return string.char(64+math.floor(self.FoeID/26))..string.char(65+(self.FoeID%26))
		end
		return "?"
	end
	
	bool PosHover(int ax,int ay)
		return ax>=self.X and ay>=self.Y and ax<=self.X+self.Image.Width and ay<=self.Y+self.Image.Height
	end
	
	void Icon(int dx,int dy)
		DarkText.Font(CombatTime.GaugeFont,self.Letter..".",dx,dy)
	end
	
	void Draw()
		delegate overdraw
		for _,status in self.StatusChanges.Each
			if status.Draw 
				if status.OverDraw
					overdraw = status.Draw
				else
					status.Draw(self)
				end
			end
		end
		if overdraw
			overdraw(self)
		else
			if (self.FlickStance % 2 == 1)
				self.Image_Neg.Draw(self.X,self.Y)
			else
				self.Image.Draw(self.X,self.Y)
			end
		end
	end
	
	static void Compile(int num, string FoeFile,FoeOversoul)
		var myFoe
		var myFoeUse
		Foe.LoadFoeTag = sprintf("FOE_%d",num)
		Foe.LoadOversoul = FoeOversoul==true
		Foe.LoadFoeID = num
		CSayF("Compiling foe %s: %s",Foe.LoadFoeTag,FoeFile)
		myFoeUse = NIL.Use("Script/Data/Foes/"..FoeFile);			
		myFoe = myFoeUse()
		myFoe.FromFile = FoeFile:upper()
		myFoe.Char = RPG.Char(Foe.LoadFoeTag)
		if Combat_Start.FoeIDDQD
			myFoe.Char.Points("HP").Minimum = myFoe.Char.Points("HP").Maximum
		end
		myFoe.AI_Data = NIL.Use(sprintf("Script/Use/Specific/CombatModules/AI/%s.nil",myFoe.AI_Module))
		if num<24
			myFoe.SpotX = ActPos.Spot[myFoe.Tag].x
			myFoe.SpotY = ActPos.Spot[myFoe.Tag].y
		else
			error("Foe spot randomizer not yet properly set up!")
		end
	end
	
	static void TotalMassacre()
		for ch in RPG.EachChar
			if prefixed(ch,"FOE") 
				RPG.KillChar(ch)
				CSayF("Removed %s",ch)
			end
		end
	end

end

// Dirty, but functional!
Foe.StatSubs = {
			"BASE_",          // Base stat, defined by level
			"BUFF_",          // Stat buffs (negative numbers can be used for debuffs)
			"END_"            // End result when all other fields have been added together
		}
// EQUIP_ was removed as this is not applicable for foes. Same goes for permanent powerup.











