// License Information:
// src/Tricky Script/Script/Use/Specific/Combat.nlb/Combat_Hurt.nil
// Version: 20.04.28
// Copyright (C) 2019 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

#use "libs/LinkedList"
#use "libs/xmath"
#use "libs/DarkText"


#accept Fighter

class Hurt

	static var List
	static var Font
	
	int R
	int G
	int B
	string msg
	var gtxt
	int x
	int y
	int wait
	int kill = 60
	
	void CONSTRUCTOR(msg,tag_x,r_y,g_r,b_g,_b,crashitboys)
		assert(msg,"No message! That hurts!")
		assert(not crashitboys,"Too many parameters... that hurts")
		self.msg=tostring(msg)
		self.gtxt = self.Font.Text(self.msg)
		switch type(tag_x)
			case "string"
				assert(not(_b or crashitboys),"Too many parameters... that hurts")
				self.x = Fighter.ByTag[tag_x].X
				self.y = Fighter.ByTag[tag_x].Y
				self.R = tonumber(r_y) or 255
				self.G = tonumber(g_r) or 255
				self.B = tonumber(b_g) or 255
			case "number"
				assert(tonumber(r_y),"No valid y... that hurts")
				self.x = tag_x
				self.y = tonumber(r_y)
				self.R = tonumber(g_r) or 255
				self.G = tonumber(b_g) or 255
				self.B = tonumber( _b) or 255
			default
				assert("Not understood the input... that hurts")
		end
		for H in self.List.Each
			if xmath.Pythagoras(self.x,self.y,H.x,H.y)<20
				self.wait = 25 + H.wait
			end
		end
		self.List.AddLast(self)
	end
	
	void Draw(ListLink)
		if self.wait>0
			self.wait--
			return
		end
		Color(self.R,self.G,self.B)
		DarkText.Text(self.gtxt,self.x,self.y)
		self.y--
		if ListLink
			$kill--
			if $kill<=0 
				ListLink.UnLink()
			end
		end
	end
	
	static void DrawAll()
		for H,L in self.List.Each
			H.Draw(L)
		end
	end

end

Hurt.List = new TLinkedList
Hurt.Font = GetFont("SYSFONT")