// License Information:
// src/Tricky Script/Script/Use/Specific/Combat.nlb/Combat_AbnormalStatus.nil
// Version: 19.12.03
// Copyright (C)  Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

#use "libs/strings"


#accept fw_Fighter

table trstatus

void DO_NOTHING(f)
end

int REG_EXP(f, int exp)
	return exp
end


class Combat_Status
	
	bool OffGauge
	bool IsDefeated
	bool UntargetableFoe
	bool OverDraw
	
	bool FearBlock
	bool SilenceBlock
	
	
	// All delegates should be void functions with a Fighter object parameter for the fighter
	// Unless explictly stated otherwise!
	delegate Draw
	delegate PreTurn
	delegate Caused
	delegate Cured
	
	// Must be int with fighter object for the fighter and an int parameter for the experience point you'd normally get
	// int(f,int exp)
	delegate AltExperience
	
	// This delegate must be "int(f,int hp)"
	delegate AltHeal
	
	static table S
	static table SN
	
	static bool UnTargetable(string ftag)
		var ch
		ch = fw_Fighter.ByTag[ftag]
		for _,s in pairs(self.SN)
			// CSayF("Char: %s; status: %s => %s",ftag,s,tostring(ch.StatusChanges[s])) // DEBUG ONLY!
			if ch.StatusChanges[s]
				var st
				st = ch.StatusChanges[s]
				if st.UntargetableFoe and prefixed(ch.Tag,"FOE_")
					return true
				end
			end
		end
		return false
	end
	
	void CONSTRUCTOR(string name,table junk)
		self.Draw = DO_NOTHING
		self.PreTurn = DO_NOTHING
		self.AltExperience = REG_EXP
		for s,v in pairs(junk)
			self[s] = v
		end
		self.S[name:upper()] = self
		self.SN[#self.SN+1] = name
	end
	
	
	
end

setmetatable(Combat_Status.S,{
	["__index"] = var(s,string key)
		key=key:upper()
		if key=="DEATH"
			key='FALLEN'
		end
		assert(trstatus[key],sprintf("Status '%s' does not exist",key))
		return trstatus[key]
	end,
	["__newindex"] = var(s,string key,st)
		key=key:upper()
		assert(st and type(st)=="table" and st[".classname"]=="Combat_Status",sprintf("Whatever you set for '%s', it's not valid as a status change",key))
		trstatus[key] = st
	end
})
global table CStatus
CStatus = Combat_Status.S




group Defeated

	var F

	bool Team(string TeamTag)
		bool AnyStatus = false
		bool cDefeated = true
		for tag,fight in pairs(self.F.Team[TeamTag])
			bool chardefeated = false
			for _,s in fight.StatusChanges.Each
				chardefeated = chardefeated or s.IsDefeated
				AnyStatus = true
			end
			cDefeated = cDefeated and chardefeated
		end
		return AnyStatus and cDefeated
	end
	
	get bool Hero
		return $Team('Hero')
	end
	
	get bool Foe
		return $Team('Foe')
	end
	
end






