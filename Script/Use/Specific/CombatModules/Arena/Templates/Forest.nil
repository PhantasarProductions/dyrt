#use "libs/tables"
#use "libs/strings"
#use "libs/RelPos"


module Forest_Template_Module

	table LoadComm
	table trees
	table textrees
	table texcloud
	var texfloor
	table texsky 
	table texclouds
	table clouds
	
	
	void CONSTRUCTOR()
		// I think I need to make a quicker way to do this :P
		for i,Enum in ipairs {"Tree","Floor","Sky","Cloud"}
			LoadComm[Enum]=i
		end
		self.texsky = {R=0,G=210,B=225}
	end
		

	void LoadTex(infinity)
		int lc = 1
		for i,v in ipairs {infinity}
			switch type(v)
				case "string"
					switch lc
						case 1
							$textrees[#self.textrees+1]=LoadImage(v)
						case 2
							$texfloor = LoadImage(v)
							lc = 1
						case 3
							error("Expected color table")
						case 4
							$texcoulds[#self.texclouds]=LoadImage(v)
						default
							error("Unknown string situation!")
					end
				case "table"
					switch lc
						case 3
							texsky.R = v.R or 0
							texsky.G = v.G or 210
							texsky.B = v.B or 225
						default
							error("Unknown table situation")
					end
				case "number"
					lc = v
				default
					error("Unknown forest area sitation: "..type(v).." parameter #"..i
			end
		end
	end
	
	void Generate()
		table temptrees
		int y = RelPos.Y[500]
		string tag
		for x = 0,Screen.Width,4
			int r
			string tex
			r = math.random(1,4)
			switch r
				case 1
					if y>RelPos.Y[400]
						--y
					end
				case 2
					if y<RelPos.Y[600]
						++y
					end
			end
			tag = sprintf("%5d_%5d")
			temptrees[tag] = { ['X'] = x, ['Y'] = y, ['Tex'] = $textrees[random(1,#self.textrees)] }
		end
		// This set up has been done to make sure trees with a higher Y will take be more dominant, otherwise "3D issues" (as far as you can call them that) will surely arise!
		$trees={}
		for _,tree in spairs(temptrees)
			$trees[#self.trees+1]=tree
		end
		$clouds={}
		if #self.texclouds>0
			int num
			num = math.random(0,5)
			for i=1,num
				$clouds[#self.clouds+1]={ ['X']=math.rand(1,Screen.Y), ['Y'] = math.random(10,RelPos.Y[300]), ['Tex']=$texclouds[random(1,#self.texclouds)] }
			end
		end
	end
	
	void Draw()
		Color(self.texsky.R,self.texsky.G,self.texsky.B)
		Rect(0,0,Screen.Width,Screen.Height)
		for cloud in each($clouds)
			cloud.Tex.Draw(cloud.X,cloud.Y)
		end
		
	end

end
