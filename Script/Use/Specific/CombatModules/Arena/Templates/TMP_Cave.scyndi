// License:
// 	  src/Script/Script/Use/Specific/CombatModules/Arena/Templates/TMP_Cave.scyndi
// 
// 	  Version: 25.04.28
// 	
// 	  Copyright (C) 2020, 2025 Jeroen Petrus Broks
// 	
// 	  ===========================
// 	  This file is part of a project related to the Phantasar Chronicles or another
// 	  series or saga which is property of Jeroen P. Broks.
// 	  This means that it may contain references to a story-line plus characters
// 	  which are property of Jeroen Broks. These references may only be distributed
// 	  along with an unmodified version of the game.
// 
// 	  As soon as you remove or replace ALL references to the storyline or character
// 	  references, or any termology specifically set up for the Phantasar universe,
// 	  or any other univers a story of Jeroen P. Broks is set up for,
// 	  the restrictions of this file are removed and will automatically become
// 	  zLib licensed (see below).
// 
// 	  Please note that doing so counts as a modification and must be marked as such
// 	  in accordance to the zLib license.
// 	  ===========================
// 
// 
// 	  zLib license terms:
// 	
// 	  This software is provided 'as-is', without any express or implied
// 	  warranty.  In no event will the authors be held liable for any damages
// 	  arising from the use of this software.
// 
// 	  Permission is granted to anyone to use this software for any purpose,
// 	  including commercial applications, and to alter it and redistribute it
// 	  freely, subject to the following restrictions:
// 	
// 	  1. The origin of this software must not be misrepresented; you must not
// 	     claim that you wrote the original software. If you use this software
// 	     in a product, an acknowledgment in the product documentation would be
// 	     appreciated but is not required.
// 	  2. Altered source versions must be plainly marked as such, and must not be
// 	     misrepresented as being the original software.
// 	  3. This notice may not be removed or altered from any source distribution.
// End License

//#use "libs/strings"

#use "Libs/SCI/Graphics"

module 
//Template_Cave

	var trueWall
	var trueFloor
	
	get var Wall
		return trueWall
	end
	
	set var Wall
		switch type(value)
			case "string"
				self.trueWall = LoadNewImage(value,replace(value,"/","."))
			case "table"
				assert(value[".classname"] == "TImage","Invalid value for ArenaTemplate_Cave.Wall")
				self.trueWall = value
			default
				error("Type "..type(value).." invalid for Cave Wall!")
		end
	end
	
	get var Floor
		return self.trueFloor
	end
	
	set var Floor
		switch type(value)
			case "string"
				self.trueFloor = LoadIfNew(value,replace(value,"/","."))
			case "table"
				assert(value[".classname"] == "TImage","Invalid value for ArenaTemplate_Cave.Floor")
				self.trueFloor = value
			default
				error("Type "..type(value).." invalid for Cave Floor!")
		end
	end
	
	void Draw()
		self.Floor.Tile(0,Screen.H/2,Screen.W,Screen.H/2)
		self.Wall.Tile(0,(Screen.H/2)-50,Screen.W,64)
	end
	
	Init
		CSay("Cave template for arena used")
	end
