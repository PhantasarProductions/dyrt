// License:
// **********************************************
// 
// src/Script/Script/Use/Specific/CombatModules/AI/AI_Crystal.scyndi
// (c) Jeroen Broks, 2020, 2025, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// 
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// 
// version: 25.05.17 XIII
// 
// End License

//#use "libs/tables"

//group CrystalSettings
Module

#use "Libs/SCI/Sys"

#use "Script/Use/Need"

#Accept Fighter

	//string Element
	//string TegenElement
	table Elementen
	Global Var CrystalSettings
	
	get string Element
		Return CrystalSettings.Element || ""
	End
	Set string Element
		CrystalSettings.Element = Value
	End
	
	Get string TegenElement
		Return CrystalSettings.TegenElement || ""
	End
	Set string TegenElement
		CrystalSettings.TegenElement = Value
	End

	
	Init
		
		// Set up base stats for this boss
		table tst
		for ch in each { [0]="Scyndi", "Irravonia" }
			for st in each { [0]="Strength", "Intelligence", "Resistance", "Agility", "Evasion" }
				tst[st] = (tst[st] || __skill) + RPG.GetChar(ch).Stat("END_"..st).Value
				CSayF("Char: %s, Stat %s, Total: %4d",ch,st,tst[st])
			end
		end
		for st,val in pairs(tst)
			int v
			switch (__skill)
				case 1
					v = math.ceil(val/3)
				case 2
					v = math.ceil(val/2)
				case 3
					v = math.ceil(val/1.5)
				default
					error("Unknown skill!")				
			end
			CSayF("Boss stat %s is now %4d",st,v)
			RPG.GetChar("FOE_1").Stat("BASE_"..st).Value = v
			Elementen = {[1]="Flame",[2]="Wind",[3]="Water",[4]="Earth"}
		end
		CrystalSettings = {}
	end
	
	void Decide(foe)
		if Element==""
			CSay("No charge, so charging now!")
			table nact			
			nact.ActTag = "ZZZ_BIGCRYSTAL_CHARGE_"..Elementen[math.random(1,4)]
			nact.ExeTag = foe.Tag
			nact.Targets = {[0]=foe}
			foe.NextAct = new Actions(nact)
			foe.NextActSpeed = 100
			foe.GaugePosition = 10001
		else
			CSayF("I got charge! Getting spell: ",Element)
			table nact
			nact.ActTag = "ZZZ_BIGCRYSTAL_"..Element
			nact.ExeTag = foe.Tag
			nact.Targets = {}
			table heroes
			for tag,hero in pairs(Fighter.Team.Hero)
				heroes+=hero
			end
			for check in each(heroes)
				if check.Char.Points("HP").Have>0
					nact.Targets+=check
				end
			end
			foe.NextAct = new Actions(nact)
			foe.NextActSpeed = 100
			foe.GaugePosition = 10001
		end
	end
	
	void Hurt(foe,string elem,int damage, act)
		var f
		f = RPG.GetChar("FOE_1")
		if elem==TegenElement
			CSayF("Struck with element %s, losing charge on element %s",elem,Element)
			f.Stat("BASE__RESIST_Elem_"..TegenElement).Value=100
			f.Stat("BASE__RESIST_Elem_"..Element).Value=100
			TegenElement = ""
			Element = ""
			if foe.GaugePosition >= 10001
				foe.GaugePosition = 0
			end
		else
			CSayF("Struck with %s, yet %s was expected so nothing happens!",elem,TegenElement)
		end
	end
//end

// Not the usual setting, but an easier way to go this time!
//return CrystalSettings
