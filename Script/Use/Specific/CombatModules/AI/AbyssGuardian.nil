// License Information:
// src/Tricky Script/Script/Use/Specific/CombatModules/AI/AbyssGuardian.nil
// Version: 20.08.12
// Copyright (C) 2020 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
module AG_AI
	
	var DefAI
	int turn 
	
	table Elements
	table Weak
	table Spell
	
	void AddE(string e,string w,string s)
		self.Elements[#self.Elements+1] = e
		self.Weak[e] = w
		self.Spell[e] = s
	end
	
	void CONSTRUCTOR()
		self.DefAI = NIL.Use("Script/Use/Specific/CombatModules/AI/Default")
		self.AddE("Flame","Frost","INFERNO")
		self.AddE("Wind","Earth","WIND")
		self.AddE("Water","Thunder","TSUNAMI")
		self.AddE("Earth","Wind","QUAKE")
		self.AddE("Frost","Flame","FROST")
		self.AddE("Thunder","Water","THUNDER")
		self.AddE("Light","Darkness","LIGHT")
		self.AddE("Darkness","Light","DARKNESS")
		self.turn = -1
	end
	
	void Decide(foe)
		self.turn++
		if self.turn % 3 != 0 
			self.DefAI.Decide(foe)
			return
		end
		int r
		string e
		string w
		string s
		var f
		r = math.random(1,#self.Elements)
		e = self.Elements[r]
		w = self.Weak[e]
		s = self.Spell[e]
		f = foe.Char
		for i,elem in ipairs(self.Elements) do
			if elem==w then
				f.Stat("BASE__RESIST_Elem_"..elem).Value=-math.random(600/__skill,60000/__skill)
			elseif elem==e then
				f.Stat("BASE__RESIST_Elem_"..elem).Value=math.random(50*__skill,10000*__skill)
			else
				f.Stat("BASE__RESIST_Elem_"..elem).Value=100 * (3 - __skill)
			end
		end
		table nact
		nact.ActTag = "ABL_FOE_X"..s
		nact.ExeTag = foe.Tag
		nact.Targets = {}
		table heroes
		for tag,hero in pairs(Fighter.Team.Hero)
			heroes[#heroes+1]=hero
		end
		for check in each(heroes)
			if check.Char.Points("HP").Have>0
				nact.Targets[#nact.Targets+1]=check
			end
		end
		foe.NextAct = new Actions(nact)
		foe.NextActSpeed = 3000 * __skill
		foe.GaugePosition = 10001
	end
	
end