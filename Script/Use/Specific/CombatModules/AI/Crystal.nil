#use "libs/tables"

group CrystalSettings
	string Element
	string TegenElement
	table Elementen
	void CONSTRUCTOR()
		
		// Set up base stats for this boss
		table tst
		for ch in each { "Scyndi", "Irravonia" }
			for st in each { "Strength", "Defense", "Intelligence", "Resistance", "Agility", "Evasion" }
				tst[st] = (tst[st] or __skill) + RPG.GetChar(ch).Stat("END_"..st).Value
				CSayF("Char: %s, Stat %s, Total: %4d",ch,st,tst[st])
			end
		end
		for st,val in pairs(tst)
			int v
			switch (__skill)
				case 1
					v = math.ceil(v/3)
				case 2
					v = math.ceil(v/2)
				case 3
					v = math.ceil(v/1.5)
				default
					error("Unknown skill!")				
			end
			CSayF("Boss stat %s is now %4d",st,v)
			RPG.GetChar("FOE_1").Stat("BASE_"..st).Value = v
			self.Elementen = {"Flame","Wind","Water","Earth"}
		end
	end
	
	void Decide(foe)
		if self.Element==""
			table nact			
			nact.ActTag = "ZZZ_BIGCRYSTAL_CHARGE_"..self.Elementen[math.random(1,4)]
			nact.ExeTag = foe.Tag
			nact.Targets = {foe}
			foe.NextAct = new Actions(nact)
			foe.NextActSpeed = 100
			foe.GaugePosition = 10001
		else
			table nact
			nact.ActTag = "ZZZ_BIGCRYSTAL_"..self.Element
			nact.ExeTag = foe.Tag
			nact.Targets = {}
			table heroes
			for tag,hero in pairs(Fighter.Team.Hero)
				heroes[#heroes+1]=hero
			end
			for check in each(heroes)
				if check.Char.Points("HP").Have>0
					nact.Targets[#nact.Targets+1]=check
				end
			end
			foe.NextAct = new Actions(nact)
			foe.NextActSpeed = 100
			foe.GaugePosition = 10001
		end
	end
	
	void Hurt(foe,string elem,int damage, act)
		var f
		f = RPG.GetChar("FOE_1")
		if elem==self.TegenElement
			f.Stat("BASE__RESIST_Elem_"..self.TegenElement).Value=100
			f.Stat("BASE__RESIST_Elem_"..self.Element).Value=100
			self.TegenElement = ""
			self.Element = ""
		end
	end
end

// Not the usual setting, but an easier way to go this time!
return CrystalSettings
