// License:
// **********************************************
// 
// src/Script/Script/Use/Specific/CombatModules/AI/AI_Blenchy2.scyndi
// (c) Jeroen Broks, 2020-2021, 2025, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// 
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// 
// version: 25.06.09
// 
// End License



//
//     During the game you'll encounter Blenchy twice.
//     
//     The first time you meet her (in the first prison of the game), 
//     she'll just cast some random spells on you (which may still offer a hard 
//     fight nonetheless).
//     
//     In the second encounter in Lord Dzgjymza's keep, she'll be offering up
//     much more of a dangerous fight, or at least depending on how well you
//     worked out your characters.
//     
//     She'll study the special abilities of one of your characters and use
//     those against you. 
//     
//     Every 3 turns she'll make a new study. The more dangerous spells you
//     have acquired already, the harder Blenchy can become to defeat. That
//     is the idea.
//     
//     
//     The study ability itself can be found in:
//          Scripts/Use/Game/Combat/AbilityEffect/Effect_BlenchyStudy.scyndi
//          
//     How to use this ability is described in this script. ;)     
// 
//

// Please note that this is a kind of a translation of code original written in Lua to NIL, with some adaptions for the new system.


Module

#use "Libs/SCI/Sys"


#use "Script/Use/Need"

#accept Fighter

global var AI_Blenchy

//module Blenchy_AI2
	// -- @IF IGNOREME
	// E_IMove = {}
	// -- @FI

	int BlenchyTurns
	table BlenchySpells

	void BlenchyStudy(foe)
		CSay("Blenchy will study the a party member")
		int TimeOut=10000
		bool GoedGekeurd
		nact:={}
		// FoeAct = {
		//
		//	TargetGroup = "Heroes",
		//	Target      = rand(1,4),
		//	Action      = "ABL",
		//	Ability     = "BLENCHY_STUDY",
		// ActSpeed    = 300
		//
		// }
		
		repeat
			Lua.assert(TimeOut>=0,"Blenchy Study -- Timeout!")
			nact.ActTag = "ZZZ_BLENCHY_STUDY"
			//nact.Targets = {foes[math.random(1,#foes)]}
			nact.Targets = { [0]=Fighter.ByTag[RPG.Party[math.random(1,4)]] }
			nact.ExeTag = foe.Tag
			GoedGekeurd = nact.Targets[0].Char.Points("HP").Have>0
			--TimeOut
		until GoedGekeurd
		foe.NextAct = new Actions(nact)
		foe.NextActSpeed = math.random(150,250)
		foe.GaugePosition = 10001

		BlenchyTurns=3
	end
	
	//
	//
	// -- How does Blenchy operate?
	void Decide(foe)
		int TimeOut=20000
		int abr
		nitem:=nil
		heroes:={}
		foes:={}
		nact:={}
			
		bool GoedGekeurd
		
		for tag,hero in pairs(Fighter.Team.Hero)
			heroes+=hero
		end
		for tag,ifoe in pairs(Fighter.Team.Foe)
			foes+=ifoe
		end

		// function E_IMove.Blenchy(ACTOR)
		// if (not BlenchySpells) or (not BlenchyTurns) or BlenchyTurns==0 then return BlenchyStudy() end
		if BlenchyTurns <= 0 || (! BlenchySpells) || (len(BlenchySpells)<=0)
			BlenchyStudy(foe)
			return
		end
		// FoeAct = FoeAct or {}
		abr = math.random(0,Len(BlenchySpells)-1)
		// FoeAct[5] = {
		//	Action   = "ABL",
		//	Ability  = BlenchySpells[abr],
		//	ActSpeed = 300
		// }
		nitem = Item[BlenchySpells[abr]] // local abl = Abilities[BlenchySpells[abr]]
		nact.ActTag = BlenchySpells[abr]
		nact.ExeTag = foe.Tag
		repeat
			// target
			switch nitem.Target
				case "OS"
					nact.Targets = {[0]=foe}
					GoedGekeurd=true
				case "1A"
					nact.Targets = {[0]=foes[math.random(0,len(foes)-1)]}
					GoedGekeurd = nact.Targets[0].Char.Points("HP").Have>0
				case "AA"
					nact.Targets = {}
					for check in each(foes)
						if check.Char.Points("HP").Have>0
							nact.Targets+=check
						end
					end
					GoedGekeurd = len(nact.Targets)>0
				case "1F"
					int maxheroes
					maxheroes = len(heroes)
					if maxheroes>4
						maxheroes=4
					end
					nact.Targets = {[0]=heroes[math.random(0,maxheroes-1)]}
					GoedGekeurd = nact.Targets[0].Char.Points("HP").Have>0
				case "AF"
					nact.Targets = {}
					for check in each(heroes)
						if check.Char.Points("HP").Have>0
							nact.Targets+=check
						end
					end
					GoedGekeurd = len(nact.Targets)>0
				case "EV"
					nact.Targets = {}
					for iteam,imember,ifighter in Fighter.ForAll()
						nact.Targets+=ifighter
					end
					GoedGekeurd = len(nact.Targets)>0
				default
					Lua.error(sprintf("Unknown target type '%s'!",nitem.Target))
			end
			TimeOut--
			assert(GoedGekeurd || TimeOut>0,"Blenchy's AI timeout!")
		until GoedGekeurd
		BlenchyTurns = (BlenchyTurns || 3) - 1
		foe.NextAct = new Actions(nact)
		foe.NextActSpeed = nitem.COM2ACT
		foe.GaugePosition = 10001
	end
	
	Init
		AI_Blenchy = AI_Blenchy2
	end
	
	
