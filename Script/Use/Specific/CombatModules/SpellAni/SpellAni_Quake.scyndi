// License:
// 	  src/Script/Script/Use/Specific/CombatModules/SpellAni/SpellAni_Quake.scyndi
// 
// 	  Version: 25.05.17
// 	
// 	  Copyright (C) 2021, 2025 Jeroen Petrus Broks
// 	
// 	  ===========================
// 	  This file is part of a project related to the Phantasar Chronicles or another
// 	  series or saga which is property of Jeroen P. Broks.
// 	  This means that it may contain references to a story-line plus characters
// 	  which are property of Jeroen Broks. These references may only be distributed
// 	  along with an unmodified version of the game.
// 
// 	  As soon as you remove or replace ALL references to the storyline or character
// 	  references, or any termology specifically set up for the Phantasar universe,
// 	  or any other univers a story of Jeroen P. Broks is set up for,
// 	  the restrictions of this file are removed and will automatically become
// 	  zLib licensed (see below).
// 
// 	  Please note that doing so counts as a modification and must be marked as such
// 	  in accordance to the zLib license.
// 	  ===========================
// 
// 
// 	  zLib license terms:
// 	
// 	  This software is provided 'as-is', without any express or implied
// 	  warranty.  In no event will the authors be held liable for any damages
// 	  arising from the use of this software.
// 
// 	  Permission is granted to anyone to use this software for any purpose,
// 	  including commercial applications, and to alter it and redistribute it
// 	  freely, subject to the following restrictions:
// 	
// 	  1. The origin of this software must not be misrepresented; you must not
// 	     claim that you wrote the original software. If you use this software
// 	     in a product, an acknowledgment in the product documentation would be
// 	     appreciated but is not required.
// 	  2. Altered source versions must be plainly marked as such, and must not be
// 	     misrepresented as being the original software.
// 	  3. This notice may not be removed or altered from any source distribution.
// End License

Module

#use "Libs/SCI/Graphics"

#use "Libs/XMath"
#use "Libs/LinkedList"

Class Rock
	ReadOnly Int StuiterHoogte
	ReadOnly Int StuiterBase
	ReadOnly Int SpeedX
	ReadOnly Int SpeedStuiter
	ReadOnly Int SpeedDeg
	Int Stuiter
	Int _Deg
	Int _X
	
	Get Int X
		_X += SpeedX
		Return _X
	End
	
	Get Int Y
		Stuiter += SpeedStuiter
		return Graphics.H - 100 - StuiterBase - math.floor( math.abs(xmath.sin(Stuiter)) * StuiterHoogte)
	End
	
	Get Int Deg
		_Deg += SpeedDeg
		Return _Deg
	End
	
	Get Bool Ended
		If SpeedX<0
			Return _X<-50
		Else
			Return X>Graphics.W+50
		End
	End
	
	Constructor()
		StuiterBase = math.random(5,Graphics.H Div 5)
		StuiterHoogte = math.random(Graphics.H Div 10,Graphics.H Div 2)
		SpeedX = math.random(5,150)
		SpeedStuiter = math.random(1,8)
		SpeedDeg = math.random(1,3)
		If math.random(1,2)==1
			SpeedX = 0-SpeedX
			_X = Graphics.W + 20
		Else
			_X = -20
		End
	End
	
	ReadOnly Static Var Lijst = New TLinkedList()
	Static Void Initiate()
		Int A = Math.random(25,500)
		For I=0,A
			Lijst.AddLast(New Rock())
		End
	End
	
	ReadOnly Static Var Img = LoadNewImage("GFX/Inventory/Rock.png","SPELLANI_ROCK")
	
	Void Draw()
		Img.Draw(X,Y)
	End
	
	Static Void DrawAll()
		For R,L in Lijst.Each
			R.Draw()
			If R.Ended
				L.UnLink()
			ENd
		End
	End
	
	Static Get Bool AllDone
		Return Lijst.Empty
	End
	
End


//Module
	Void Start()
		Rock.Initiate()
	End
	
	Void Draw()
		Rock.DrawAll()
	End
	
	Void Update()
	End
	
	Get Bool Ended
		Return Rock.AllDone
	End
	
//End

// This is the SpellAni from Star Story.
// As Dyrt processes things differently, these functions are meant to convert things.

Void SA_Init(); Start(); End

Bool Cycle()
	Draw()
	Update()
	Return Ended
End
