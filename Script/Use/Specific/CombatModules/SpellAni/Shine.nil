// License Information:
// **********************************************
// 
// src/Tricky Script/Script/Use/Specific/CombatModules/SpellAni/Shine.nil
// (c) Jeroen Broks, , All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 20.04.24
// End License Information

#use "libs/LinkedList"

#pure
local
#endpure

class Shine
	static var List 
	static int Count
	
	readonly int ID
	readonly int X
	readonly int Y
	readonly int W
	
	int D=1
	int C=0
	
	void CONSTRUCTOR(target)
		self.Count++
		self.List = self.List or new TLinkedList
		self.ID = self.Count
		CSayF("Shine #%05d created!",self.ID)
		self.W = math.floor(target.Width / 2)
		self.X = target.X+self.W
		self.Y = target.Y+target.Height
		self.List.AddLast(self)
	end
	
	void DESTRUCTOR()
		CSayF("Shine #%05d destroyed!",self.ID)
	end
end

module SpellAni_Shine

	bool DrawOvertake
	var Audio
	readonly int MaxCycles = 20
	
	// The difference between a CONSTRUCTOR and the and Init function
	// Is that CONSTRUCTOR is only automatically loaded when this
	// module is called fo the first time in a combat.
	// Init will be called EVERY time a move is being performed.
	void CONSTRUCTOR()
		self.Audio = LoadNewAudio("SFX/Combat/SpellAni/Glitter.wav","SPELLANI_Glitter")
	end	

	void Init(act)
		for tar in each(act.Targets)
			new Shine(tar)
		end
		self.Audio.Play()
	end
	
	
	bool Cycle(act)
		__white
		SetAlpha(200)
		for s,l in Shine.List.Each
			#+ s.C s.D
			if s.C>=s.W
				s.D=-1
			end
			if s.C<0
				l.UnLink()
			else
				Rect(s.X-s.C,0, s.C*2,s.Y)
			end
		end
		SetAlpha(255)
		return Shine.List.Count<=0
	end
	
end