// License Information:
// src/Tricky Script/Script/Use/Boxes.nil
// Version: 19.08.21
// Copyright (C)  Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information




#say "Loading: Boxes.nil"
#use "libs/LinkedList"

class Box
	
	static var Back
	static var List
	static bool NeverList
	
	int x
	int y
	int w
	int h
	int ix
	int iy
	bool Kill
	bool DontList
	
	get int ex
		return $w+$x
	end
	
	get int ey
		return $h+$y
	end
	
	void Draw()
		__white
		int wd = 5
		self.Back.ITile(self.x,self.y,self.w,self.h,self.ix,self.iy)
		if self.w<20 or self.h<20
			wd=3
		end
		for i=0,wd-1
			GraphColor.Alpha=120
			__white
			Rect(self.x+wd,self.y+i,self.w-(i+1+wd),1) // Top
			Rect(self.x+i,self.y,1,self.h-(i+1)) // Left
			Color(111,112,116)
			Rect(self.x+i+1,(self.y+self.h)-i,self.w-(i+1),1) // Bottom
			Rect((self.x+self.w)-i,self.y+i,1,self.h-(i+1+wd)) // Right
			GraphColor.Alpha=255
		end
	end
	
	static void DrawAll()
		for ibox,lnk in Box.List.Each
			ibox.Draw()
			if ibox.Kill 
				lnk.UnLink()
			end
		end
	end
	
	
	void CONSTRUCTOR(int ax,int ay,int aw, int ah, aix, aiy,dontlist)
		// Create what we don't have on the first time
		self.Back = self.Back or TImage.Obtain("MENUBACK")
		if not(dontlist or self.NeverList)
			self.List = self.List or new TLinkedList
		end
		self.DontList = dontlist or self.NeverList
		
		// Create the box itself
		self.x=ax
		self.y=ay
		self.w=aw
		self.h=ah
		
		// If not set, use modulos to get the correct position
		self.ix = aix or -(ax % self.Back.Width)
		self.iy = aiy or -(ay % self.Back.Height)
		
		// Add to the list
		if not $DontList
			self.List.AddLast(self)
		end
		
		// Debug notice
		CWriteLine(sprintf("Created new box at (%d,%d); format %dx%d; Insert(%d,%d)",ax,ay,aw,ah,self.ix,self.iy),180,255,0)
	end

end




