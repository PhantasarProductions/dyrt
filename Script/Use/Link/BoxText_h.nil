#use "libs/strings"

void LoadBoxText()
	if not StateExists("FLOW_BOXTEXT")
		LoadFlow("FIELD","Script/Flow/FlowBoxtext.nil")
	end
end

void BTExe(string command)
	LoadBoxText()
	LuaDoString("FLOW_BOXTEXT",command,"Call flow: BOXTEXT")
end	



private group TrueBoxTextGroup

	void Load(string Scenario,string File)
		CWriteLine(sprintf("Loading scenario %s from file %s",Scenario,File),180,0,255)
		BTExe("Scenario.LoadData(\"%s\",\"%s\", false)",Trim(File),Trim(Scenario))
	end

	void CallMe(string Scenario,string Tag,ReturnFlow,Num)
		if not StateExists("FLOW_BOXTEXT")
			error("Bold thing to call the BoxText while the flow's not even been loaded, let alone any scenario file!")
		end
		LuaDoString("FLOW_TEXT",sprintf("FlowBoxText.InitBTFlow(\"%s\", \"%s\", \"%s\", %d)",Trim(Scenario),Trim(Tag),Trim(ReturnFlow or CurrentFlow()),Num or 0),"Chain to flow: BOXTEXT")
	end

end


// I am thinking of a way to make direct support for this in classes and groups
// But for now, this will do ;)
global table BoxText
setmetatable(BoxText,{
	[__call] = function(t) return TrueBoxTextGroup.CallMe end
	[__index] = function(t,k) return TrueBoxTextGroup[k] end
	[__newindex] = function(t,k,v) TrueBoxTextGroup[k]=v end
})

