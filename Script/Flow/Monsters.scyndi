// License:
// **********************************************
// 
// src/Script/Script/Flow/Monsters.scyndi
// (c) Jeroen Broks, 2020, 2025, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// 
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// 
// version: 25.06.17 X
// 
// End License

Script
//#use "libs/tables"
//#use "libs/DarkText"

#use "Libs/SCI/Sys"
#use "Libs/SCI/SString"
#use "Libs/SCI/Graphics"

#use "Script/Use/Need"
#use "Script/Use/Misc/Boxes"

#use "Script/Data/General/MonsterList"

//global delegate BUB_Draw
//global delegate BUB_Update

group Ignore
	get var Ignore
		return nil;
	end
	set var Ignore
	end
end

quickmeta TableIgnore
	index
	end
	newindex
	end
	//len
	//	return 0
	//end
end

class Foe
	static int LoadFoeID=0
	
	var FoeID
	var Char
	
	link AI_Module = Ignore.Ignore
	link AllowOverSoul = Ignore.Ignore
	//link AllowOversoul = Ignore.Ignore
	
	string Description
	var Image
	link Image_Neg = Ignore.Ignore
	int Cash = 5
	table Fatal
	
	table Drop	
	table DropCount
	get int DropTotal
		int ret = 0
		for _,i in pairs(self.DropCount)
			ret += i
		end
		return ret
	end
	
	table Steal	
	table StealCount
	get int StealTotal
		int ret = 0
		for _,i in pairs(self.StealCount)
			ret += i
		end
		return ret
	end
	
	get string Tag
		return "MONSTERLISTFOE"
	end
	
	//static get bool LoadOversoul
	//return false
	//end
	
	//static set bool LoadOversoul
	//end
	
	readonly static bool LoadOversoul = false
	int Experience
	bool Boss
	
	string Name
	
	link AI_Moves = TableIgnore
	
	get int Width
		return self.Image.Width
	end
	
	get int Height
		return self.Image.Height
	end
	
	readonly table Instant
	readonly table StatusChanges
	
	CONSTRUCTOR(string tag)
		// tag is not importan here, so it'll be ignored!
		RPG.KillChar("MONSTERLISTFOE")
		//self.Drop = setmetatable(self.Drop,{ 
			//["__newindex"] = void(s,k,v)
			ddef DNI
				v:=infinity
				if type(v)=="string"
					v = upper(v)
					CSayF("Adding drop item: %s",v)
				else
					CSayF("Adding drop money: %d",v)
				end				
				self.DropCount[v] = (self.DropCount[v] or 0) + 1
			end
			//["__len"] = int(s)
			//	return 0
			//end
		//})
		Drop = SetMetaTable({},{["__newindex"]=DNI})
		
		//self.Steal = setmetatable(self.Steal,{
		ddef SNI
			v:=infinity
			//["__newindex"] = void(s,k,v) 
				if type(v)=="string"
					v = upper(v)
				end
				self.StealCount[v] = (self.StealCount[v] || 0) + 1
			end
			//["__len"] = int(s)
			//	return 0
			//end
		//})
		Steal = SetMetaTable({},{["__newindex"]=SNI})
	end
	
end



group MIDM
	
	readonly var ArUp
	readonly var ArDown

	readonly var Lijst 
	readonly var BigFont
	readonly var Font
	readonly var BlitzFont
	
	var hover
	var show
	
	var LeftBox
	var RightBox
	int ScrollY = 0
	
	int page = 0
	table pfunc
	int scrollhover = 0
	
	void Draw()
		// Base UI
		Party.ShowBar()
		Box.DrawAll()
		// Left
		int y := 0-self.ScrollY
		self.hover = nil
		for f,entry in spairs(self.Lijst)
			if y>0 && y<LeftBox.h-20
				int insx=0
				if Mouse.X<Graphics.W/2 && Mouse.Y>=y && Mouse.y<y+20 && Mouse.X>60
					insx=10
					self.hover = entry
				end
				__white
				if self.show && entry==self.show.entry
					__ember
				end
				Font.Dark(f,self.LeftBox.x+60+insx,y)
				Color(0,180,255)
				Font.Dark(entry.Category,(self.LeftBox.x+self.LeftBox.w)-20-insx,y,1)
			end
			y += 20
		end
		__white
		// Scroll
		self.scrollhover = 0
		if self.ScrollY>0
			if Mouse.X<40 && Mouse.Y<40
				self.scrollhover = -2
				Color(100,255,0)
			end
			self.ArUp.Draw(5,5)
			__white
		end
		if y>=$LeftBox.h-20
			if Mouse.X<40 && Mouse.Y<self.LeftBox.h && Mouse.Y>self.LeftBox.h-50
				self.scrollhover = 2
				Color(100,255,0)
			end
			self.ArDown.Draw(5,self.LeftBox.h-50)
			__white
		end
		
		// Right
		if self.show
			var d 
			int rx 
			rx = self.RightBox.x
			d  = self.show.fulldata
			d.Image.Draw(Graphics.W-10-d.Width,10)
			__ember
			BigFont.Dark(d.Name,rx+10,10)
			__white
			Font.Dark(d.Description,rx+10,60)
			self.pfunc[self.page]()
		end
		// Mouse
		__white
		Mouse.Show()
	end
	
	var MLoaded
	var QUse(string foe)
		foe = Upper(StripExt(foe))
		MLoaded = MLoaded || {}
		if !MLoaded[Foe]
			Lua.Scyndi.Use(foe)
		End
		return MLoaded.RetFunc
	End
	
	void Update()
		//Dev.ConCheck()
		if self.hover && Mouse.HitLeft
			self.show = { ["entry"] = self.hover, ["fulldata"] = self.QUse(hover.File)() }
		end
		if Mouse.X>Graphics.W/2 && Mouse.Y<Graphics.H-128 && Mouse.HitLeft
			self.page = (self.page+1) % len(self.pfunc)
		end
		if Mouse.HitRight
			GoToFlow("FIELD")
		end
		if Mouse.HeldLeft
			self.ScrollY += self.scrollhover
		end
	end
	
	
	void Start()
		//BUB_Draw = self.Draw
		//BUB_Update = self.Update
		self.LeftBox = new Box(0,0,Graphics.W/2,Graphics.H-128)
		self.RightBox = new Box(Graphics.W/2,0,Graphics.W/2,Graphics.H-128)
		self.BigFont = GetFont("BIGTEXT")
		assert(self.BigFont,"Font import failed!")
		CSay("= Import Normal font")
		self.Font = GetFont("BOXTEXT")
		assert(self.Font,"Font import failed!")
		CSay("= Import Sys font")
		self.BlitzFont = GetFont("SYSFONT")
		assert(self.BlitzFont,"Font import failed!")
		//self.Lijst = NIL.Use("Script/Data/General/MonsterList.nil")
		Lijst = Lua.Scyndi.Class.MonsterList.Ret
		//self.pfunc[1] = void()
		ddef Een
			int rw 
			var d
			rw = Graphics.W/2
			d  = self.show.fulldata
			for i,k in pairs { "Strength", "Defense", "Intelligence", "Resistance", "Accuracy", "Evansion", "Agility", "HP" }
				__white
				Font.Dark(k,rw + 10,100+(i*25))
				__ember
				if d.Boss
					Font.Dark("---",Graphics.W-20,100+(i*25),1) 
				else
					Font.Dark(tostring(d.Char.Stat("END_"..k).Value),Graphics.W-20,100+(i*25),1) 
				end
			end
		end
		//self.pfunc[2] = void()
		ddef Twee
			var d
			int rw
			rw = Graphics.W/2
			d  = self.show.fulldata
			for i,k in pairs { "Flame", "Wind", "Water", "Earth", "Frost", "Thunder", "Light", "Darkness" }
				__white
				Font.Dark(k,rw + 10,100+(i*25))
				if d.Fatal[k]
					__red
					Font.Dark("Fatal",Graphics.W-20,100+(i*25),1)
				else
					__ember
					Font.Dark(tostring(d.Char.Stat("END__RESIST_Elem_"..k).Value).."%",Graphics.W-20,100+(i*25),1)
				end
			end
		end
		//self.pfunc[3] = void()
		ddef Drie
			var d
			int rw
			rw = Graphics.W/2
			d  = self.show.fulldata
			for i,k in pairs { "Poison", "Disease", "Sleep", "Silence", "Death", "Paralysis", "Fear", "Zombie" }
				__white
				Font.Dark(k,rw + 10,100+(i*25))
				__ember
				Font.Dark(tostring(math.min(100,math.max(0,d.Char.Stat("END__RESIST_Stat_"..k).Value))).."%",Graphics.W-20,100+(i*25),1)
			end
		end
		//self.pfunc[4] = void()
		ddef Vier
			var d
			int rw
			int dh = 100
			int sh 
			table lst
			sh = (Graphics.H-228)/2
			rw = Graphics.W/2
			d  = self.show.fulldata
			lst[1] = { ["h"]=dh, ["items"] = d.DropCount, ["total"] = d.DropTotal, ["name"] = "Item Drops" }
			lst[2] = { ["h"]=sh, ["items"] = d.StealCount, ["total"] = d.StealTotal, ["name"] = "Merya can steal" }
			for il,li in ipairs(lst)
				int y
				y = li.h + 25;
				Color(0,180,255)
				Font.Dark(li.name,rw+10,li.h)
				for k,itm in pairs(li.items)
					__white
					if type(k)=="number"
						if k == 1
							Font.Dark("1 shilder",rw + 20, y)
						else
							Font.Dark(sprintf("%d shilders",k),rw + 20, y)
						end
					else
						Font.Dark(Item[k].Name or "Didn't fetch name <bug?>",rw + 20, y)
					end
					__ember
					Font.Dark(tostring(math.floor((itm/li.total)*100)).."%",Graphics.W-20, y,2)
					y += 20
				end
			end
		end
		pfunc= { [0] = Een, Twee, Drie, Vier}
		self.ArUp     = ObtainImage("UP")
		self.ArDown   = ObtainImage("DOWN")
	end
end

Init
	MIDM.Start()
End

Global Void MainFlow()
	MIDM.Draw()
	MIDM.Update()
End
