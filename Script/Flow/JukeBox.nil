// License Information:
// src/Tricky Script/Script/Flow/JukeBox.nil
// Version: 20.06.03
// Copyright (C) 2020 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

#use "Script/Use/Anyway"
#use "libs/tables"

global delegate BUB_Draw
global delegate BUB_Update

group GROUP_JukeBox
	
	string ReturnFlow
	table Data
	var Background
	var Font
	var NotesFont
	int Scroll
	table Artists
	var hover
	var playing
	var Pijl_Op
	var Pijl_Neer
	
	get int PijlX
		return Screen.W-50
	end
	
	get int PijlY_Op
		return 5
	end
	
	get int PijlY_Neer
		return Screen.H-120
	end
	
	void CONSTRUCTOR()
		BUB_Draw        = self.Draw
		BUB_Update      = self.Update
		self.Data       = NIL.Use("Script/Data/General/Jukebox")
		self.Background = TImage.Obtain("MENUBACK")
		self.NotesFont  = LoadImageFont(FONT_Blitz)
		self.Font       = GetFont("BOXTEXT")
		self.Pijl_Op    = TImage.Obtain("UP")
		self.Pijl_Neer  = TImage.Obtain("DOWN")
		// Music.Push();
		Music.Stop();
	end
	
	void DESTRUCTOR()
		CSay("Byebye! Jukebox!")
	end
	
	void Draw()
		int y
		y = 0 - self.Scroll
		self.Background.Tile(0,0,Screen.Width,Screen.Height)
		self.hover = nil;
		for file,entry in spairs(self.Data)
			entry.file = file
			if y>=0 and y<=(Screen.H-100)				
				entry.TxtT = entry.TxtT or self.Font.Text(entry.Title)
				self.Artists[entry.Author] = self.Artists[entry.Author] or self.Font.Text(entry.Author)
				if Mouse.X<Screen.W-40 and Mouse.Y>=y and Mouse.Y<=y+30
					self.hover=entry
					Color(255,180,0)
					else
					__white
				end				
				entry.TxtT.Draw(5,y)
				self.Artists[entry.Author].Draw(Screen.W/2,y)
			end
			#+ y 30
		end
		// Playing information
		if self.playing
			self.playing.Playing = self.playing.Playing or self.Font.Text("Playing '"..self.playing.Title.."' by "..self.playing.Author)
			self.playing.TNotes  = self.playing.TNotes  or self.NotesFont.Text(self.playing.Notes)
			Color(0,180,255)
			self.playing.Playing.Draw(5,Screen.H-95)
			self.playing.TNotes.Draw( 5,Screen.H-60)
		end
		
		// Scroll
		if self.Scroll!=0
			__white
			self.Pijl_Op.Draw(self.PijlX,self.PijlY_Op)
			if Mouse.X>Screen.W-40 and Mouse.Y>self.PijlY_Op and Mouse.Y<self.PijlY_Op+32 and Mouse.HeldLeft
				self.Scroll--
			end
		end
		if y>=(Screen.H-100)
			__white
			self.Pijl_Neer.Draw(self.PijlX,self.PijlY_Neer)
			if Mouse.X>Screen.W-40 and Mouse.Y>self.PijlY_Neer and Mouse.Y<self.PijlY_Neer+32 and  Mouse.HeldLeft
				self.Scroll++
			end
		end
		
		// Mouse pointer
		__white
		Mouse.Show()
	end
	
	void Update()
		Dev.ConCheck()
		if Mouse.HitRight
			GoToFlow(self.ReturnFlow)
			KillFlow("JUKEBOX")
			//Music.Pop()
			return
		end
		if Mouse.HitLeft and self.hover
			Music.Play(self.hover.file)
			self.playing = self.hover
		end
	end
	
end