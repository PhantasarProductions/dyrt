// License Information:
// src/Tricky Script/Script/Flow/FieldMenu.nil
// Version: 19.08.23
// Copyright (C)  Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information







#use "Script/Use/Anyway"
#use "Script/Use/Boxes"
#use "Script/Use/BoxPics"
#use "libs/tables"
#use "libs/DarkText"
#use "libs/Roman"

#macro __TopBarHeight 55


group Flow_FieldMenu

	table situations
	string situation
	
	var BigFont
	var Font
	
	var TopBox
	var LeftBox
	var RightBox
	
	table BaseStats
	
	link CharNum = Party.SelectedCharacter
	get string CharTag 
		//CSayF("Getting Chartag %d!",$CharNum)
		return RPG.Party[$CharNum]
	end
	
	string strstat(string chtag,string stat)
		if chtag=="Shanda"
			return "???"
		end
		if chtag=="Kirana"
			switch stat
				case "Strength"
					return "Weak"
				case "Defense"
					return "Fragile"
				case "Intelligence"
					return "Dumb"
				case "Resistance"
					return "Awful"
				case "Agility"
					return "Fast (if afraid)"
				case "Accuracy"
					return "Miss"
				case "Evasion"
					return "Hard to miss"
				default
					return "Terrible"
			end
		end
		string ch 
		int s 
		ch = RPG.Char(chtag)
		s = ch.Stat("END_"..stat).Value
		return sprintf("%5d",s)
	end
	
	void BasePanel(ubox)
		var ch
		int m=3
		int xy
		int level
		//CSay("...")
		//CSay("CHARTAG = "..$CharTag)
		__white
		ch = RPG.Char($CharTag)
		ubox = ubox or $LeftBox
		BoxPic(ubox.x+10,ubox.y+10,$CharTag,"GENERAL","top")
		__amber
		DarkText.Font($BigFont,ch.Name,ubox.x+125, ubox.y+15)
		if __skill==3 
			m=2
		end
		for i=1,m
			LuaDoString("PARTY",sprintf("SubParty.BigPointsBar(trim(\"%s\"), %d, %d, %d, %d)",$CharTag,i,ubox.x+125,ubox.y+40+(i*20),ubox.w-150))
		end
		for i,s in ipairs($BaseStats)
			__white
			xy = (ubox.y+120)+(i*15)
			DarkText.Font($Font,s,ubox.x+10,xy)
			__amber
			DarkText.Font($Font,$strstat($CharTag,s),(ubox.x+ubox.w)-10,xy,1)
		end
		xy = xy + 30
		__white
		level = ch.Stat("Level").Value
		DarkText.Font($Font,"EXP to next level:",ubox.x+10,xy)
		DarkText.Font($Font,"Level:",ubox.x+10,xy+20)
		if level>=__levelcap or $CharTag=="Kirana" or $CharTag=="Shanda"
			__red
			DarkText.Font($Font,"---",(ubox.x+ubox.w)-10,xy,1)
			if $CharTag=="Kirana" or $CharTag=="Shanda"
				__skyblue
			elseif level==__levelcap
				__amber
			end
		else
			__amber
			DarkText.Font($Font,ch.Stat("Experience").Value,(ubox.x+ubox.w)-10,xy,1)
			__green
		end
		DarkText.Font($Font,Roman(ch.Stat("Level").Value),(ubox.x+ubox.w)-10,xy+20,1)
	end
	
	void NotYetImplemented(ubox)
		int cx
		int cy
		cx = ubox.x+(ubox.w/2)
		cy = ubox.h+(ubox.h/2)
		__red
		DarkText.Font($BigFont,"The requested feature has",cx,cy-25,2)
		DarkText.Font($BigFont,"not yet been implemented!",cx,cy+25,2)
	end
	
	void Status()
	end
	
	void CONSTRUCTOR()
	
		CSay("Constructing Field menu!")
	
		CSay("= void ToggleHelp")
		void ToggleHelp()
			__autohelp = not __autohelp
		end
		
		CSay("= Help table")
		table help
		help = { ['IconFile'] = "Help", ['Action'] = ToggleHelp, ['Help']="Toggles help text on/off", ['NoTab']=true}
		
		CSay("= Situation definitions!")
		// situations
		self.situations = { 
			["FIELD"] = { 
				["MenuItems"] = { 
					{ ["IconFile"]="Status", ["Right"]=self.Status, ["Help"]="Shows all statistics and data" },
					{ ["IconFile"]="Items", ["Right"]="Items", ["Help"]="Shows your inventory" },
					{ ["IconFile"]="Abilities", ["Right"]="Abilities", ["Help"]="Shows a character's abilities (if they actually got them)" },
					{ ["IconFile"]="Trophies", ["Right"]="Trophies", ["Help"]="Overview of achievements you can obtain, and how to obtain them" }
				}, 
				["Return"] = "FIELD" 
			},
			["COMBAT_ITEMS"] = {["MenuItems"] = {}},
			["COMBAT_ABILITIES"] = {["MenuItems"] = {}},
			["SHOP"] = {["MenuItems"] = {} },
			["BANK"] = {["MenuItems"] = {} }
		}
		
		CSay("= Configuring Situation Data!")
		for k,t in pairs(self.situations)
			CSayF("Situation %s has %d menu items (help not counted)",k,#t.MenuItems)
			t.MenuItems[#t.MenuItems+1] = tablecopy(help)
			CSayF("Situation %s has %d menu items (help included)",k,#t.MenuItems)
			int width
			width = (Screen.Width / #t.MenuItems)
			for i,item in pairs(t.MenuItems)
				item.x = ((i*width)-math.floor(width/2)-24)
			end
		end
		
		// ScreenBoxes
		CSay("= Creating work boxes")
		self.TopBox = new Box(0,0,Screen.Width,__TopBarHeight)
		self.LeftBox = new Box(0,__TopBarHeight,math.floor(Screen.Width/2),(Screen.Height-128)-__TopBarHeight)
		self.RightBox = new Box(math.floor(Screen.Width/2),__TopBarHeight,math.floor(Screen.Width/2),(Screen.Height-128)-__TopBarHeight)
		
		// Fonts
		CSay("= Import Big font")
		self.BigFont = GetFont("BIGTEXT")
		assert(self.BigFont,"Font import failed!")
		CSay("= Import Normal font")
		self.Font = GetFont("BOXTEXT")
		assert(self.BigFont,"Font import failed!")
		CSay("= Construction of field menu done!")
		
		// Base Stats
		self.BaseStats = { "Strength", "Defense", "Intelligence", "Resistance", "Agility", "Accuracy", "Evasion" }
	end
	
	void ItemBar()
		assert($situations[$situation],sprintf("Situation %s unknown!",$situation) )
		__white
		for item in each($situations[$situation].MenuItems)
			$situations[$situation].citem = $situations[$situation].citem or item
			item.Icon = item.Icon or LoadIfNew(sprintf("GFX/MenuIcons/%s.png",item.IconFile),sprintf("MENUITEM_%s",item.IconFile:upper() ) )
			assert(item.Icon,sprintf("Icon for %s not present!",item.IconFile) )
			item.Icon.Draw(item.x,4)
		end
	end

end





with Flow_FieldMenu

	global void BUB_Draw()
		bool bd_debug = false
		void dchat(string msg)
			if bd_debug
				CSay("DEBUG BUB_DRAW:> "..msg)
			end
		end
	
		// Draw all the boxes
		dchat("Boxes")
		Box.DrawAll()
		
		// Item bar
		dchat("Itembar")
		$ItemBar()
		
		// Party Sub
		dchat("Party")
		Party.ShowBar()
		
		// Left Tab
		dchat("Left panel")
		if type($situations[$situation].citem.Left)=="function"
			dchat("= Custom")
			$situations[$situation].citem.Left($LeftBox)
		else
			dchat("= base")
			$BasePanel($LeftBox)
		end
		
		// Right Tab
		dchat("Right panel")
		if type($situations[$situation].citem.Right)=="function"
			dchat("= Custom")
			$situations[$situation].citem.Right($RightBox)
		else
			dchat("= base")
			$NotYetImplemented($RightBox)
		end
		
		// Show Mouse
		dchat("Mouse")
		__white
		Mouse.Show()
		
		dchat("Done")
	end
	
	global void BUB_Update()
		Dev.ConCheck()
	end
	
end







