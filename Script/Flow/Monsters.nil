// License Information:
// **********************************************
// 
// src/Tricky Script/Script/Flow/Monsters.nil
// (c) Jeroen Broks, 2020, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 20.09.26
// End License Information
#use "libs/tables"
#use "libs/DarkText"

#use "Script/Use/Anyway"
#use "Script/Use/Boxes"

global delegate BUB_Draw
global delegate BUB_Update

group Ignore
	get var Ignore
		return nil;
	end
	set var Ignore
	end
end

quickmeta group TableIgnore
	index
	end
	newindex
	end
	len
		return 0
	end
end

class Foe
	static int LoadFoeID=0
	
	var FoeID
	var Char
	
	link AI_Module = Ignore.Ignore
	link AllowOverSoul = Ignore.Ignore
	link AllowOversoul = Ignore.Ignore
	
	string Description
	var Image
	link Image_Neg = Ignore.Ignore
	int Cash = 5
	table Fatal
	
	table Drop	
	table DropCount
	get int DropTotal
		int ret = 0
		for _,i in pairs(self.DropCount)
			#+ ret i
		end
		return ret
	end
	
	table Steal	
	table StealCount
	get int StealTotal
		int ret = 0
		for _,i in pairs(self.StealCount)
			#+ ret i
		end
		return ret
	end
	
	get string Tag
		return "MONSTERLISTFOE"
	end
	
	//static get bool LoadOversoul
	//return false
	//end
	
	//static set bool LoadOversoul
	//end
	
	readonly static bool LoadOversoul = false
	int Experience
	bool Boss
	
	string Name
	
	link AI_Moves = TableIgnore
	
	get int Width
		return self.Image.Width
	end
	
	get int Height
		return self.Image.Height
	end
	
	readonly table Instant
	readonly table StatusChanges
	
	void CONSTRUCTOR(string tag)
		// tag is not importan here, so it'll be ignored!
		RPG.KillChar("MONSTERLISTFOE")
		self.Drop = setmetatable(self.Drop,{ 
			["__newindex"] = void(s,k,v) 
				if type(v)=="string"
					v = v:upper()
					CSayF("Adding drop item: %s",v)
				else
					CSayF("Adding drop money: %d",v)
				end				
				self.DropCount[v] = (self.DropCount[v] or 0) + 1
			end,
			["__len"] = int(s)
				return 0
			end
		})
		self.Steal = setmetatable(self.Steal,{ 
			["__newindex"] = void(s,k,v) 
				if type(v)=="string"
					v = v:upper()
				end
				self.StealCount[v] = (self.StealCount[v] or 0) + 1
			end,
			["__len"] = int(s)
				return 0
			end
		})
		
	end
	
end



group MIDM
	
	readonly var Lijst 
	readonly var BigFont
	readonly var Font
	readonly var BlitzFont
	
	var hover
	var show
	
	var LeftBox
	var RightBox
	int ScrollY = 0
	
	int page = 0
	table pfunc
	
	void Draw()
		// Base UI
		Party.ShowBar()
		Box.DrawAll()
		// Left
		int y 		
		y = self.ScrollY
		self.hover = nil;
		for f,entry in spairs(self.Lijst)
			if y>0 and y<$LeftBox.h-20
				int insx=0
				if Mouse.X<Screen.W/2 and Mouse.Y>=y and Mouse.y<y+20
					insx=10
					self.hover = entry
				end
				__white
				if self.show and entry==self.show.entry
					__ember
				end
				DarkText.Font($Font,f,self.LeftBox.x+10+insx,y)
				Color(0,180,255)
				DarkText.Font($Font,entry.Category,(self.LeftBox.x+self.LeftBox.w)-20-insx,y,1)
			end
			#+ y 20
		end
		__white
		// Right
		if self.show
			var d 
			int rx 
			rx = self.RightBox.x
			d  = self.show.fulldata
			d.Image.Draw(Screen.W-10-d.Width,10)
			__ember
			DarkText.Font($BigFont,d.Name,rx+10,10)
			__white
			DarkText.Font($Font,d.Description,rx+10,60)
			self.pfunc[self.page+1]()
		end
		// Mouse
		__white
		Mouse.Show()
	end
	
	void Update()
		Dev.ConCheck()
		if self.hover and Mouse.HitLeft
			self.show = { ['entry'] = self.hover, ['fulldata'] = NIL.Use(replace(self.hover.File,".nil",""))() }
		end
		if Mouse.X>Screen.W/2 and Mouse.Y<Screen.H-128 and Mouse.HitLeft
			self.page = (self.page+1) % #self.pfunc
		end
	end
	
	
	void CONSTRUCTOR()
		BUB_Draw = self.Draw
		BUB_Update = self.Update
		self.LeftBox = new Box(0,0,Screen.W/2,Screen.H-128)
		self.RightBox = new Box(Screen.W/2,0,Screen.W/2,Screen.H-128)
		self.BigFont = GetFont("BIGTEXT")
		assert(self.BigFont,"Font import failed!")
		CSay("= Import Normal font")
		self.Font = GetFont("BOXTEXT")
		assert(self.Font,"Font import failed!")
		CSay("= Import Sys font")
		self.BlitzFont = GetFont("SYSFONT")
		assert(self.BlitzFont,"Font import failed!")
		self.Lijst = NIL.Use("Script/Data/General/MonsterList.nil")
		self.pfunc[1] = void()
			int rw 
			var d
			rw = Screen.W/2
			d  = self.show.fulldata
			for i,k in pairs { "Strength", "Defense", "Intelligence", "Resistance", "Accuracy", "Evansion", "Agility", "HP" }
				__white
				DarkText.Font($Font,k,rw + 10,100+(i*25))
				__ember
				if d.Boss
					DarkText.Font($Font,"---",Screen.W-20,100+(i*25),1) 
				else
					DarkText.Font($Font,tostring(d.Char.Stat("END_"..k).Value),Screen.W-20,100+(i*25),1) 
				end
			end
		end
		self.pfunc[2] = void()
			var d
			int rw
			rw = Screen.W/2
			d  = self.show.fulldata
			for i,k in pairs { "Flame", "Wind", "Water", "Earth", "Frost", "Thunder", "Light", "Darkness" }
				__white
				DarkText.Font($Font,k,rw + 10,100+(i*25))
				if d.Fatal[k]
					__red
					DarkText.Font($Font,"Fatal",Screen.W-20,100+(i*25),1)
				else
					__ember
					DarkText.Font($Font,tostring(d.Char.Stat("END__RESIST_Elem_"..k).Value).."%",Screen.W-20,100+(i*25),1)
				end
			end
		end
		self.pfunc[3] = void()
			var d
			int rw
			rw = Screen.W/2
			d  = self.show.fulldata
			for i,k in pairs { "Poison", "Disease", "Sleep", "Silence", "Death", "Paralysis", "Fear", "Zombie" }
				__white
				DarkText.Font($Font,k,rw + 10,100+(i*25))
				__ember
				DarkText.Font($Font,tostring(math.min(100,math.max(0,d.Char.Stat("END__RESIST_Stat_"..k).Value))).."%",Screen.W-20,100+(i*25),1)
			end
		end
		self.pfunc[4] = void()
			var d
			int rw
			int dh = 100
			int sh 
			table lst
			sh = (Screen.H-228)/2
			rw = Screen.W/2
			d  = self.show.fulldata
			lst[1] = { ['h']=dh, ['items'] = d.DropCount, ['total'] = d.DropTotal, ['name'] = "Item Drops" }
			lst[2] = { ['h']=sh, ['items'] = d.StealCount, ['total'] = d.StealTotal, ['name'] = "Merya can steal" }
			for il,li in ipairs(lst)
				int y
				y = li.h + 25;
				Color(0,180,255)
				DarkText.Font($Font,li.name,rw+10,li.h)
				for k,itm in pairs(li.items)
					__white
					if type(k)=="number"
						if k == 1
							DarkText.Font($Font,"1 shilder",rw + 20, y)
						else
							DarkText.Font($Font,sprintf("%d shilders",k),rw + 20, y)
						end
					else
						DarkText.Font($Font,Item[k].Name or "Didn't fetch name <bug?>",rw + 20, y)
					end
					__ember
					DarkText.Font($Font,tostring(math.floor((itm/li.total)*100)).."%",Screen.W-20, y,2)
					#+ y 20
				end
			end
		end
	end
end