// License Information:
// **********************************************
// 
// src/Tricky Script/Script/Flow/Introduction.nil
// (c) Jeroen Broks, , All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 19.09.14
// End License Information




// Dirty code straight from the toilet!
#accept BUB_Draw
#accept BUB_Update

#accept Introduction
#accept Show

#use "script/use/anyway"
#use "Libs/LinkedList"
#use "Libs/Strings"


class Loader

	static var List
	static int Max
	
	readonly string What
	readonly string File
	readonly string Tag
	readonly int id
	int drawn
	
	void Run()
		CSayF("%4d/%4d: Loading %s '%s' to reference:%s",self.id,self.Max,self.What,self.File,self.Tag)
		switch self.What
			case "Image"
				LoadImage(self.File,self.Tag)
			case "ImageFont"
				LoadImageFont(self.File,self.Tag)
			case "MousePointer"
				Mouse[self.Tag]=self.File
			case "InstantTune"
				Music.Play("Music/StartUp/Introduction.wav",true)
			default
				error(sprintf("%d: Loader.What = \"%s\"; File = \"%s\"; Tag=\"%s\": Can't load unknown phenomenon %s",self.id,self.What,self.File,self.Tag,self.What))
		end		
	end
	
	void CONSTRUCTOR(string awhat,string afile, string atag)
		self.What = awhat
		self.File = afile
		self.Tag  = atag
		self.List.AddLast(self)
		self.Max  = self.List.Count
		self.id   = self.Max
	end

end

group Loading
	void CONSTRUCTOR()
		Loader.List = new TLinkedList
		// Message banners
		new Loader("Image","GFX/Alg/Loading.png","LOADING")

		// Background
		new Loader("Image","GFX/Alg/MenuBack.png","MENUBACK")
	
	
		// UI
		new Loader("Image","GFX/Alg/Next.png","NEXT")
		new Loader("Image","GFX/Alg/Prev.png","PREV")
		new Loader("Image","GFX/Alg/Up.png","UP")
		new Loader("Image","GFX/Alg/Down.png","DOWN")
		
		// Combat UI
		new Loader("Image","GFX/Combat/UI/TimeGauge.png","COMBAT_TIMEGAUGE")
		new Loader("Image","gfx/combat/ui/GaugePointHero.png","COMBAT_TIMEPOINTHERO")
		new Loader("Image","gfx/combat/ui/GaugePointFoe.png" ,"COMBAT_TIMEPOINTFOE")
		
		// Hero pointers
		for _,ch in ipairs {"Eric","Yasathar","Irravonia","YoungIrravonia","Brendor","Scyndi","Rebecca","Dernor","Merya","Aziella","Shanda","Kirana"}
			new Loader("Image",sprintf("gfx/combat/ui/GaugeIcons/%s.png",ch),sprintf("COMBAT_GAUGE_%s",ch))
		end
	
		// BoxText Font
		new Loader("ImageFont","Fonts/Coolvetica.20.jfbf","BOXTEXT")
		new Loader("ImageFont","Fonts/Coolvetica.35.jfbf","BIGTEXT")
		new Loader("ImageFont","Fonts/Blitz.jfbf","SYSFONT")
		new Loader("ImageFont",FONT_MainMenu,"MAINMENU")
		
		//Mouse.Pointer      = "GFX/Alg/Mouse.png"
		//Mouse.SleepPointer = "GFX/Alg/Mouse_Sleep.png"
		new Loader("MousePointer","GFX/Alg/Mouse.png","Pointer")
		new Loader("MousePointer","GFX/Alg/Mouse_Sleep.png","SleepPointer")
		
		new Loader("InstantTune","","")
	end
	
	var Loading	
	
	var CLink
	get var Obj
		return self.CLink.MyObject
	end
	
	void Update()
		self.CLink = self.CLink or Loader.List.First
		if $Obj.drawn<4
			return
		end
		self.Obj.Run()
		self.CLink = self.CLink.Next
		if not self.CLink
			Introduction.Current = Show
		end
	end
	
	void Draw()
		int g
				
		if (not self.Loading) and ImageLoaded("LOADING")
			self.Loading =  TImage.Obtain("LOADING")
		elseif self.Loading
			__white
			self.Loading.Draw((Screen.Width/2)-(self.Loading.Width/2),(Screen.Height/2)-(self.Loading.Width/2))
		end
		Color(70,70,70)
		Rect(0,Screen.Height-10,Screen.Width,10)
		g = math.floor( (self.Obj.id/self.Obj.Max) * 255)
		Color(255-g,g,0)
		Rect(0,Screen.Height-10,math.floor ((self.Obj.id/self.Obj.Max) * Screen.Width),10)
		$Obj.drawn++
	end
end

group Show
	table What2Show
	int stage
	int stagetime
	int sec 
	
	void MakeMe()
		table W
		var F
		W = self.What2Show
		F = GetFont("MAINMENU")
		W[1] = LoadImage("GFX/Alg/Phantasar_Productions.png")
		W[2] = LoadImage("GFX/Alg/Presents.png")
		W[3] = F.Text("A game by: Jeroen P. Broks")
		W[4] = F.Text("With help of: Man of Steel")
		W[5] = F.Text("And: Widzy")
		W[6] = LoadImage("GFX/Alg/Dyrt_Logo.png")
	end
	
	void CONSTRUCTOR()
		self.stage = 0
		self.sec = os.time()
	end
	
	void Draw()
		if self.stage==0
			self.MakeMe()
			self.stage=1
		end
		var W
		W = self.What2Show[self.stage]
		assert(W,"Nothing on stage index "..self.stage.." (stage time: "..self.stagetime..")")
		W.Draw((Screen.Width/2)-math.floor(W.Width/2),(Screen.Height/2)-math.floor(W.Height/2))
	end
	
	void Update()
		if self.stage==0
			return
		end
		int s
		s = os.time()
		if (s!=self.sec) and (self.stage<#self.What2Show)
			self.stagetime++
			self.stage = math.floor(self.stagetime/#self.What2Show+1)
			if self.stage<1
				self.stage=1
			end
			self.sec=s
		end
	end
end

group Chain

	int CountDown=10

	void DoLoad()
		LoadFlow("MAINMENU","Script/Flow/MainMenu.nil")
		GoToFlow("MAINMENU")
		KillFlow("INTRO")
	end
	
	void Draw()
		Loading.Loading.Draw((Screen.Width/2)-(Loading.Loading.Width/2),(Screen.Height/2)-(Loading.Loading.Width/2))
		--self.CountDown
	end
	
	void Update()
		if self.CountDown>0
			return
		end
		self.DoLoad()
	end
end


group Introduction

	var Current
	var ContText
	int r = 255
	int g = 0
	int b = 1
	bool buttonhover

	void Draw()
		self.Current.Draw()
		if self.Current!=Loading and self.Current!=Chain
			int x
			int y
			int w
			int h
			self.ContText = self.ContText or GetFont("MAINMENU").Text("Continue")
			x = (Screen.Width/2)-math.floor(self.ContText.Width/2)
			y = math.floor(Screen.Height*0.80)
			w = self.ContText.Width
			h = self.ContText.Height
			$buttonhover = Mouse.X>x and Mouse.X<x+w and Mouse.Y>y and Mouse.Y<y+h
			__black
			Rect(x-4,y-4,w+8,h+8)
			Color(self.r,self.g,self.b)
			Rect(x-2,y-2,w+6,h+6,"line")
			Color(self.g,self.r,255-self.b)
			self.ContText.Draw(x,y)
			if (self.b%2==0)
				self.r++
				if $r>=255
					self.b++
					self.r=255
				end
			else
				self.r--
				if $r<=0
					self.b++
					self.r=0
				end
			end
			if self.b>=255
				self.b=0
			end
			self.g=255-self.r
			__white
			Mouse.Show()
			// GetFont("MAINMENU").DrawText("Mouse: ("..Mouse.X..","..Mouse.Y..")",0,0)
		else 
			$buttonhover=false
		end
	end
	
	void Update()
		if DEVELOPMENT and Keyboard.Held("LeftShift") and Keyboard.Held("RightShift") and Keyboard.Held("Subtract")
			GoConsole()
		end
		if $buttonhover and Mouse.HitLeft
			self.Current = Chain
			return
		end
		self.Current.Update()
	end
	
	void CONSTRUCTOR()
		BUB_Draw = self.Draw
		BUB_Update = self.Update
		self.Current = Loading
	end
end





