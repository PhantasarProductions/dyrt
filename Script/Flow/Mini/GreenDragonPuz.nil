#use "Script/Use/Anyway"
#use "libs/tables"
	
#macro ForceView true
#macro spacing 176
#macro yline 100
#macro starttijd 320
	
int speed
int maxmoves
int Stage = 1


var flask
var skull
var back

flask = LoadIfNew("GFX/Puzzle/BalletjeBalletje/Flask.png","BalletjeBalletjeFles")
skull = LoadIfNew("GFX/Puzzle/BalletjeBalletje/Skull.png","BalletjeBalletjeSchedel")
back  = TImage.Obtain("MENUBACK")

quickmeta group giftig
	index
		return gv.Int["GreenDragonFlask"..key]
	end
	
	newindex
		gv.Int["GreenDragonFlask"..key] = value
	end
	
	len
		return 5
	end
end

class Fles
	bool giftig = false
	int x
	int movex = 0
	
	get int X
		return self.x
	end
	
	void Draw()
		flask.Draw(self.x,yline)
	end
	
	void CONSTRUCTOR(int sx)
		self.x = sx
	end
end

table Flessen
for i=1,5
	Flessen[i] = new Fles(i*spacing)
end
for i=1,4
	// CSay("???"..i.."\t"..tostring(giftig[i]))
	Flessen[giftig[i]].giftig = true
	CSayF("Flesje %d is giftig! Niet drinken dus!",i)
end


	
switch __skill
	
	case 1
		speed = 1
		maxmoves = 5
	case 2
		speed = 4
		maxmoves = 7
	case 3
		speed = 8
		maxmoves = 10
	default
		error("Unknown skill __skill")
	
end
	
group Start

	int Time = starttijd
	
	void Draw()
		for i=1,5
			if Flessen[i].giftig and (ForceView or gv.Bool["GREENDRAGONFLASKMARKED"..i] )
				skull.Draw(Flessen[i].X+36,yline + 100)
			end
		end
		Rect(0,Screen.H-50,math.floor( (self.Time / starttijd ) * Screen.W ),50)
	end 
	
	void Update()
		self.Time--
		if self.Time<=0
			Stage++
		end
	end
	
end
	
group Moving
	
	int moves
	
	void CONSTRUCTOR()
		self.moves = maxmoves
	end
	
	void Draw()
	end 
	
	void Update()
		bool moved
		for i,fles in ipairs(Flessen)
			int mbx
			mbx = i * spacing
			if fles.x<mbx 
				#+ fles.x speed
				if fles.x>mbx
					fles.x=mbx
				end
				moved=true
			elseif fles.x>mbx 
				#- fles.x speed
				if fles.x<mbx
					fles.x=mbx
				end
				moved = true
			end
		end
		if not moved
			if self.moves<=0
				Stage++
				return
			end
			int s1
			int s2
			var sf
			repeat
				s1 = math.random(1,5)
				s2 = math.random(1,5)
			until s1!=s2
			sf = Flessen[s1]
			Flessen[s1]=Flessen[s2]
			Flessen[s2]=sf
			self.moves--
		end
	end
	
end
	
group Ask
	
	var MYC
	
	void CONSTRUCTOR()
		self.MYC = GetFont("BIGTEXT").Text("Choose the correct flask!")
	end
	
	void Draw()
		self.MYC.Draw(math.floor(Screen.W/2),25,2)
		Mouse.Show()
	end 
	
	void Update()
	end
	
end

group Reveal
	
	void Draw()
	end
	
	void Update()
	end
	
end
	
table Stages
Stages = { Start,Moving,Ask,Reveal }

global void BUB_Draw()
	back.Tile(0,0,Screen.W,Screen.H)
	for f in each(Flessen)
		f.Draw()
	end
	Stages[Stage].Draw()
end

global void BUB_Update()
	Dev.ConCheck()
	Stages[Stage].Update()
end
