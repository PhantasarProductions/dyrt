// License Information:
// src/Tricky Script/Script/Subs/SubMusic_Safe.nil
// Version: 21.02.03
// Copyright (C) 2020, 2021 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information





global bool MUSICSCRIPT=true

// #use "libs/stack"
#use "script/use/anyway"



table pushed

// var stacked

//class TMusic
//	readonly string filename
//	readonly var resource
//	var instance
	
//	void CONSTRUCTOR(string file)
//		file = trim(file)
//		CSay("Loading music file \""..file.."\"")
//		self.filename=file
//		self.resource = LoadAudio(file)
//	end
//	
//	void DESTRUCTOR()
//		CSay("Free music loaded from \""..self.filename.."\"")
//		self.instance.Stop()
//		self.instance=nil
//		self.resource.Free()
//	end
//	
//end	

var curplaying
var curinstance
string curfile

int BN(bool k)
	if k 
		return 1
	else
		return 0
	end
end
bool mbuf

void init()
	// stacked = new TStack
end

global void MUS_Play(string file,dontloop)
	var newmus
	if curplaying and curfile==file then return end
	newmus = new TAudio(file,"MUSIC"..BN(mbuf))
	if curinstance
		CSay("Murdering old instance! "..curinstance.buftag)
		curinstance.Stop()
		curinstance.Free()
		curinstance = nil;
	else
		CSay("No instance so nothing to release!")
	end
	if curplaying
		curplaying.Free()
	end
	curplaying = newmus
	newmus = nil;
	curfile = file
	if dontloop
		curinstance = curplaying.IPlay()
	else
		curinstance = curplaying.Loop()
	end
	mbuf = not mbuf
end

global void MUS_Stop()
	if curinstance
		curinstance.Stop()
		curinstance.Free()
	end
	curinstance = nil;
end

global void MUS_Push()	
	assert(curplaying,"I cannot push when no music is loaded!")
	//-- assert(not pushed[curplaying],"Can't push the same music instance twice!")
	CSayF("Pushing: "..curfile)
	// stacked.Value = curplaying
	// pushed[curplaying]=true
	pushed[#pushed+1]=curfile
end

global void MUS_Pop()
	if #pushed<=0 
		CSay("Music stack empty, so no pops!")
		return
	end
	string popped
	popped = pushed[#pushed]
	CSayF("'%s' popped!",popped)
	pushed[#pushed] = nil;
	MUS_Play(popped)
end


global void MUS_Debug()
	CSayF("Curplayer '%s' => '%s'",tostring(curplaying),curplaying.filename)
	for p,v in pairs(pushed) do
		CSayF("Pushed '%s' => '%s' (%s)",tostring(p),p.filename,tostring(v))
	end
end




// init()