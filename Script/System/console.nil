// License Information:
// src/Tricky Script/Script/System/console.nil
// Console
// version: 20.07.19
// Copyright (C) 2019, 2020 Jeroen P. Broks
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information




#use "libs/strings"
#use "libs/tables"
#use "script/use/anyway"

// This group is called by the console, whenever it's used to type commands
// that are not by default in the engine itself.

group ConsoleCommands

	void HAMANDJAMANDSPAMALOT(infinity)
		for i,s in ipairs( { infinity } )
			CSayF("%6d. %s",i,s)
		end
		CSay("But at least this game was not coded in Python!")
	end
	
	void FLOW()
		CWriteLine("Current flow is: "..CurrentFlow(),255,255,100)
	end
	
	void SCREENSIZE()
		CWriteLine(sprintf("Screen size: %4dx%4d",Screen.Width,Screen.Height),math.random(0,255),math.random(0,255),math.random(0,255))
	end
	
	void VARS()
		string serie
		table spl
		serie = gv()
		spl = split(serie,"\n")
		for i,line in ipairs(spl)
			int r
			int g
			int b
			g = math.floor( (i/#spl) * 255 )
			r = 255-g
			b = math.abs( math.sin(i) * 25 )
			CWriteLine(line,r,g,b)
		end
	end
	
	void SWAPDIR()
		table d
		d = Swap.Keys
		CWriteLine("Swap dir:",180,0,255)
		for i,k in ipairs(d)
			int r
			int g
			int b
			r = math.floor( (i/#d)*255)
			g = 255-r
			b = 0
			CWriteLine(k,r,g,b)
		end
		if #d==1
			CSayF("%09d swap entry found!",1)
		else
			CSayF("%09d swap entries found!",#d)
		end
	end
	
	void SHOWSWAP(string s)
		CSay(Swap.Data[s])
	end
	
	void AUTOAWARDCHECK()
		Achievements.AutoCheck()
	end
	
	void AUTOAWARD()
		Achievements.Auto(true)
	end
	
	void ViewSkill(string ch)
		int r
		int g
		int b
		r = math.random(0,255)
		g = math.random(0,255)
		b = math.random(0,255)
		var Chr
		Chr = RPG.GetChar(ch)
		void W(string s)
			CWriteLine(s,r,g,b)
		end
		W("Char: "..ch)
		for i=0,4 do
			W(sprintf("Skill #%d: level %3d/%3d; experience: %5d/%5d",i,Chr.Points(sprintf("SKILLLVL%d",i)).Have,Chr.Points(sprintf("SKILLLVL%d",i)).Maximum,Chr.Points(sprintf("SKILLEXP%d",i)).Have,Chr.Points(sprintf("SKILLEXP%d",i)).Maximum))
		end
		W("")
	end
	
	void VIEWSKILL(infinity)
		table arg
		arg = { infinity }
		if #arg==0
			for i=1,8
				if RPG.Party[i] and RPG.Party[i]!=""
					self.ViewSkill(RPG.Party[i])
				end
			end
		else
			for ch in each(arg)
				self.ViewSkill(ch)
			end
		end
	end
	
	void SKILLFIX()
		for i = 1 , 8
			if RPG.Party[i] and RPG.Party[i]!=""
				for j = 0 , 4
					var Chr
					Chr = RPG.GetChar(RPG.Party[i])
					Chr.Points(sprintf("SKILLEXP%d",j)).Maximum = (10 * (10^__skill)) * Chr.Points(sprintf("SKILLLVL%d",j)).Have
				end
			end
		end
	end
	
	void JACKTHERIPPER()
		gv.Bool.DEBUG_CHEAT_JACKTHERIPPER = not gv.Bool.DEBUG_CHEAT_JACKTHERIPPER
		CSay("Mode Jack The Ripper: "..tostring(gv.Bool.DEBUG_CHEAT_JACKTHERIPPER))
	end
	
	void IDDQD()
		gv.Bool.DEBUG_CHEAT_IDDQD = not gv.Bool.DEBUG_CHEAT_IDDQD
		CSay("Mode IDDQD: "..tostring(gv.Bool.DEBUG_CHEAT_IDDQD))
	end
	
	void MUSICMEM()
		LuaDoString("MUSIC","MUS_Debug()","Debug sub: MUSIC")
	end
	
	void AUDIOMEM()
		var lines
		lines = split(LoadedAudioBuffers(),"\n")
		for i,line in ipairs(lines)
			int r
			int g
			int b
			b = math.floor( (i/#lines) * 255 )
			g = 255-b
			r = 255-math.abs( math.sin(i) * 25 )
			CWriteLine(line,r,g,b)
		end
	end

end