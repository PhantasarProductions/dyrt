// License:
// **********************************************
// 
// src/Script/Script/Char/Will/Will_Irravonia.scyndi
// (c) Jeroen Broks, 2020, 2025, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// 
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// 
// version: 25.04.21 IV
// 
// End License


module 

	#use "Libs/SCI/Sys"

	#use "Script/Use/Need"
	
	table Warded
	
	void MkWard()
		string old
		old = gv.String.IrraWard
		repeat
			Ward = ({"Flame","Wind","Water","Earth"})[math.random(1,4)]
		until old!=gv.String.IrraWard
		CSay("Irravonia will ward: "..Ward)
	end
	
	get string Ward
		if gv.String.IrraWard==""
			MkWard()
		end
		return gv.String.IrraWard
	end
	
	set string Ward
		gv.String.IrraWard = value
	end
	
	get int AP 
		return RPG.GetChar("Irravonia").Points("AP").Have
	end
	
	set int AP
		RPG.GetChar("Irravonia").Points("AP").Have = value
	end
		
	Init
		//setmetatable(Warded,{
		//	["__newindex"] = void(s,string elem,bool value)
			ddef wnidx
				plua s
				string elem
				bool value
				s,elem,value = infinity
				gv.Bool["IrraWarded."..elem] = value
				bool yes = true
				for _,e in ipairs {[0]="Flame","Wind","Water","Earth"}
					yes = yes && Warded[e]
				end
				if yes
					Achievements.Award("WILL_IRRAVONIA")
				end
			end
			
			// for some (odd) reason NIL 
			// didn't recognize the function defintion here, so let's 
			// make Lua do it by it
			//#pure
			//["__index"] = function(s, elem)
			ddef widx
				plua s
				string elem
				s,elem = infinity
				return gv.Bool["IrraWarded."..elem]
			end
			//#endpure
			SetMetaTable(Warded,{["__index"]=widx,["__newindex"]=wnidx	})
	end
	
	// Scyndi
	delegate AfterEnemyAttack
	
	// Dernor
	delegate AfterBeingHurt
	
	// Eric, Rebecca
	delegate AfterAttack
	
	// Irravonia, Brendor
	int DamageManipulation(Action,int Damage,string Element)
		CSay("Will Irravonia ward this?")
		if Upper(Element)!=Upper(Ward)
			CSayF("No.... Element doesn't match! (%s != %s)",Upper(Element),Upper(Ward))
			return Damage
		end
		new Hurt("Personal will:","Irravonia",255,180,0)
		new Hurt("Elemental ward","Irravonia",0,180,255)
		if __skill!=3
			 AP += Damage
		end
		MkWard()
		return 0
	end

	
	// Aziella
	delegate Targeted
	
	// Kirana
	delegate PreInput
	
	// Merya
	delegate ManipulateItemUsage
	
//end
