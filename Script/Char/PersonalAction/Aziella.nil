// License Information:
// **********************************************
// 
// src/Tricky Script/Script/Char/PersonalAction/Aziella.nil
// (c) Jeroen Broks, , All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 19.12.16
// End License Information

#use "libs/xmath"
#use "libs/tables"

module Aziella_Personal_Action
	
	readonly int skip = 8
	readonly var Img
	get int X
		Map.Obj="AziellaArrowObject"
		return Map.ObjInt.X
	end
	set int X
		Map.Obj="AziellaArrowObject"
		Map.ObjInt.X = value
	end
	get int Y
		Map.Obj="AziellaArrowObject"
		return Map.ObjInt.Y
	end
	set int Y
		Map.Obj="AziellaArrowObject"
		Map.ObjInt.Y = value
	end
	
	int IX
	int IY
	
	int DX
	int DY
	
	table tags
	
	void ArrowMove()
		for i=1,self.skip
			#+ self.X self.DX
			#+ self.Y self.DY
			bool going = false
			for tag in each(self.tags)
				int tx
				int ty
				number afstand = 0
				if FieldMap.Kthura.Blocked(self.X,self.Y,true)
					going = going or ( ( prefixed(tag,"IrraFly_") or prefixed(tag,"ScyndiHook_") or prefixed(tag,"AziellaShootZone_")) and FieldFlow.Map.Kthura.InObj(tag,self.X,self.Y) )
					//if (not going)
					//	CSayF("Blocked: (%5d,%5d) >> %s",self.X,self.Y,tag)
					//end
				else
					going = true
				end
				Map.Obj=tag
				tx=Map.ObjInt.X
				ty=Map.ObjInt.Y
				afstand=xmath.Pythagoras(tx,ty,self.X,self.Y)
				// CSayF("Target %s(%5d,%5d); afstand: %5.3f pixels; pijltje(%5d,%5d) ",tag,tx,ty,afstand,self.X,self.Y)
				if afstand<8 and prefixed(tag,"Schiet_") 
					Map.Obj=tag
					if Map.ObjString.Texture:upper()=="GFX/TEXTURES/SCHIETSCHIJF/UNHIT.PNG"
						Map.ObjString.Texture="GFX/TEXTURES/SCHIETSCHIJF/HIT.PNG"
						if true then // Map.Data.NoPerm!="YES"
							string m
							m = "MAPCHANGES."..FieldMap.LoadedMap
							Swap.Data[m] = Swap.Data[m] .. "FieldMap.Kthura.Layer=\""..FieldMap.Kthura.Layer.."\";\tMap.Obj=\""..tag.."\"; Map.ObjString=\""..Map.ObjString.Texture.."\"..\n"
						end
						MapScript[tag]()
					end
					Map.Kill("AziellaArrowObject")
					return
				end
			end
			if not going
				Map.Kill("AziellaArrowObject")
				return
			end
		end
	end
		
	void Draw()
		self.Img.Draw(self.IX,self.IY)
		if Map.HasTag("AziellaArrowObject")
			self.ArrowMove()
		end
	end
	
	void Shoot(int dx, int dy, string w)
		if Map.HasTag("AziellaArrowObject")
			return
		end
		self.tags = {}
		for tag in FieldMap.Kthura.EachTag()
			if prefixed(tag,"IrraFly_") or prefixed(tag,"ScyndiHook_") or prefixed(tag,"AziellaShootZone_") or prefixed(tag,"Schiet_") 
				self.tags[#self.tags+1]=tag
			end
		end
		FieldFlow.Map.Kthura.CreateObstacle("GFX/AziellaBolt/"..w..".png",__player.X,__player.Y,"AziellaArrowObject")
		Map.Obj = "AziellaArrowObject"
		// Map.ObjTexture = "GFX/AziellaBolt/"..w..".png"
		Map.ObjBool.Visible = true
		Map.ObjBool.Impassible = false
		Map.ObjInt.Dominance = 20
		Map.ObjInt.Alpha = 1000
		CSayF("Bolt created at (%5d,%5d)",Map.ObjInt.X,Map.ObjInt.Y)
		self.DX = dx
		self.DY = dy
	end
	
	bool Click(int but,int x, int y)
		bool ret
		ret = x>self.IX and y>self.IY and x<self.IX+200 and y<self.IY+200
		if ret
			// left
			if x<self.IX+25 and y>self.IY+25 and y<self.IY+175
				self.Shoot(-1, 0,"W")
			// right
			elseif x>self.IX-175 and y>self.IY+25 and y<self.IY+175
				self.Shoot( 1, 0,"E")
			// up
			elseif y<self.IY+25 and x>self.IX+25 and x<self.IX+175
				self.Shoot( 0,-1,"N")
			// down
			elseif y>self.IY+175 and x>self.IX+25 and x<self.IX+175
				self.Shoot( 0, 1,"S")
			end
		end
		return ret
	end
	
	void CONSTRUCTOR()
		self.Img = LoadImage("GFX/PersAction/Aziella.png")
		self.IX = Screen.Width -300
		self.IY = Screen.Height-400
	end

end
