// License:
// **********************************************
// 
// src/Script/Script/Char/PersonalAction/PA_Merya.scyndi
// (c) Jeroen Broks, 2019-'20, 2025, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// 
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// 
// version: 25.05.18 V
// 
// End License

Module

#say "Let's load Merya's personal action!"

#use "Libs/SCI/Sys"
#use "Libs/SCI/Kthura"
#use "Libs/SCI/SString"
#use "Libs/SCI/Graphics"
#use "Libs/SCI/InterVar"

#use "libs/linkedlist"
#use "libs/xmath"
//#use "libs/strings"

#use "Script/Use/Need"

#say "Merya Scan class!"

LocExtern DrawCircle "Scyndi.Globals.Circle" 

class MeryaScan

	static var Lijst
	
	static void Detect()
		for punt,schakel in self.Lijst.Each
			schakel.UnLink()
		end
		//for Tag in FieldFlow.Map.Kthura.EachTag(Map.Layer)
		For Tag in Each(Kthura.TagList)
			//if prefixed(Tag,"MeryaScan_")
			if prefixed(Upper(Tag),"MERYASCAN_")
				new MeryaScan(Tag)
			end
		end
	end
	
	static void ShowAll()
		for punt,schakel in self.Lijst.Each
			punt.Show(schakel)
		end
	end
	
	int CD
	int trueX
	int trueY
	string Layer
	
	get int X
		return trueX - gint.ScrollX
	end
	get int Y 
		return trueY - gint.ScrollY
	end
	
	get int Radius
		return CD % 64
	end
	
	CONSTRUCTOR(string tag)
		number afstand
//		Map.Obj=tag
//		self.trueX = Map.ObjInt.X
//		self.trueY = Map.ObjInt.Y
		trueX = Kthura.Obj[Tag].X
		trueY = Kthura.Obj[Tag].Y
		afstand = xmath.Pythagoras(self.trueX,self.trueY,Kthura.Obj.Player.X,Kthura.Obj.Player.Y)
		self.CD = math.ceil(320 - afstand)
		if self.CD<8 
			self.CD=8
		end
		self.Layer = Kthura.CurrentLayer
		self.Lijst.AddLast(self)
	end
	
	void Show(schakel)
		SetColor(180,180,0)
		DrawCircle(self.X,self.Y,self.Radius)
		if schakel
			--self.CD
			if self.CD<0 || self.Layer!=Kthura.CurrentLayer
				schakel.UnLink()
			end
		end
	end
end

#say "Merya Personal Action Module!"
//module Merya_Personal_Action
	var Img
	int X
	int Y
	int Stage = 0
	int Radius = 0 
	get int W
		return Img.Width
	end
	get int H
		return Img.Height
	end
	
	get int MeryaX
		//return FieldFlow.Map.Kthura.Actor.Player.X - FieldFlow.Map.ScrollX
		return Kthura.Obj.Player.X - gint.ScrollX
	end
	
	get int MeryaY
		//return FieldFlow.Map.Kthura.Actor.Player.Y - FieldFlow.Map.ScrollY
		return Kthura.Obj.Player.Y - gint.ScrollY
	end
	
	void RadarCircle()
		SetColor(180,0,255)
		Circle(MeryaX,MeryaY,Radius)
		Radius++
		if Radius>150 && Stage==1
			Stage=2
			MeryaScan.Detect()
		elseif Radius>300
			Stage=3
		end
		__white
	end
	
	void Draw()
		Img.Draw(X,Y)
		switch Stage
			case 1 
				RadarCircle()
			case 2
				RadarCircle()
				MeryaScan.ShowAll()
			case 3
				MeryaScan.ShowAll()			
		end
	end
	
	bool Click(int but,int _x, int _y)
		CSay("Merya tries to scan the area")
		if Mouse.X>X && Mouse.Y>Y && Mouse.X<X+W && Mouse.Y<Y+H
			Stage = 1
			Radius = 0
			return true
		end
		return false		
	end
	
	Init
		CSay("Loading Merya's button!")
		Img = LoadImage("GFX/PersAction/Merya.png","PA_Merya")
		X = Graphics.Width -300
		Y = Graphics.Height-400
		CSay("Starting up a linked list for found pivots!")
		MeryaScan.Lijst = new TLinkedList()
	end

#say "End of Merya's personal action module! Let's compile and continue!"
//end
