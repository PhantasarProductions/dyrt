// License Information:
// **********************************************
// 
// src/Tricky Script/Script/MapScript/TrueAbyss_01.nil
// (c) Jeroen Broks, 2020, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// version: 20.08.02
// End License Information



#say "Map Script - None!"
#use "script/use/anyway"
#use "Script/Use/StartCombatMod"

#macro ScharumMusic "Music/Combat/Random/Chapter"..math.random(1,4)..".wav"

#macro MaxTreasure 123

// Needed for Scharum
group TempParty
	table pushed
	void Push()
		string L
		L = Map.Leader
		for i=1,8 do
			self.pushed[i] = RPG.Party[i]
			if i==1 
				RPG.Party[1] = L
			else
				RPG.Party[i] = ""
			end
		end
	end
	void Pop()
		for i=1,8 do
			RPG.Party[i] = self.pushed[i]
		end
	end
end


group MScript
	
	// Links
	link Score = gv.Int.TrueAbyssScore
	link FloorsReset = gv.Int.TrueAbyssReset
	
	// Layer quick
	get int LayerNum
		return tonumber(right(Map.Layer,3)) or 0
	end
	
	set int LayerNum
		Map.Layer = sprintf("$%03d",value)
	end
	
	// Next Floor
	void NPC_NEXT()
		if self.LayerNum % 15 == 0 and (not Yes("Do you want to leave this town to continue to the next floor?"))
			return
		end
		int l 
		int v
		string n
		l = self.LayerNum
		if self.LayerNum % 10 == 0
			string m
			m = sprintf("TrueAbyss_%02d",math.ceil((self.LayerNum+1)/10))
			CSay("Loading Map: %s",m)
			Field.LoadMap(m)
		else
			self.MUSIC()
		end
		v = l+1
		n = sprintf("#%03d",v)
		if v%5!=0
			Map.Generate(n)
		end
		Map.GoToLayer(n,"Start")
		self.Score = self.LayerNum + self.FloorsReset
		gv.Bool.AllowMagicStones = self.Score >= 5 * __skill
		gv.Bool.AllowOversoul = __skill!=1 and (self.Score >= 90 / __skill) 
		for i=1,MaxTreasure
			if Map.HasTag("RANDOMTREASURE_"..i)
				CSayF("Checking %03d",i)
				int x
				int y
				int v
				Map.Obj = "RANDOMTREASURE_"..i
				x,y = Map.ObjInt.X,Map.ObjInt.Y
				v = not Map.Blocked(x,y,true)
				Map.ObjBool.Visible = v
				CSayF("Hidden   %03d: (%d,%d) > %s",i,x,y,tostring(v))
			else
				CSayF("Not there %03d!",i)
			end
		end
		CSay("All checking accounted for!")
	end
	
	void EXITMAP()
		self.NPC_NEXT()
	end

	// Abyss score
	void RecalcAbyssScore()
		self.Score = self.LayerNum + self.FloorsReset
	end
	
	// Music
	table Cities
	table General
	
	void MUSIC()
		self.MusicBegun=false
	end
	
	bool MusicBegun
	void StartMusic()
		CSay("Get music to start")
		if self.LayerNum == 0
			Music.Play("Music/Dungeon/Abyss.wav")
		elseif self.LayerNum == 1
			CSay("Kick out on floor 1... Safety precaution")
			return
		elseif self.LayerNum % 5 == 1
			Music.Play("Music/Dungeon/"..self.General[math.random(1,#self.General)]..".wav")
		elseif self.LayerNum % 15 == 0
			Music.Play("Music/Cities/"..self.Cities[math.random(1,#self.Cities)]..".wav")
		elseif self.LayerNum %  5 == 0
			Music.Play("Music/Original/Silence.wav")
		else
			CSay("Not a floor to change music for")
		end
	end
	
	// Plasma
	table plasmasized
	
	
	// Conchita
	void CONCHITA_WELCOME()
		if not Done.Conchita_Welcome
			MapText("NPC_MT_CONCHITASTART")
		end
	end
	
	// Reset
	void NPC_YELLOW()
		if Yes("These yellow orbs are resetters.\nUsing them will bring you back to floor 000, and all your levels will be reset to 1\n\nInventory, equipment, money and mastered abilities will however be transferred.\n\nYou will also, based on how many floors you already passed, also gain extra bonuses on your experience gained (both regular as for your skill groups).\n\nDo you want to perform this reset?")
			self.Reset()
		end
	end
	
	void Reset()
		for _,ch in ipairs { "Eric","Irravonia","Brendor","Scyndi","Rebecca","Dernor","Merya","Aziella" }
			CSayF("Resetting: %10s",ch)
			Party.SetLevelStats(ch, 1)
			RPG.GetChar(ch).Stat('Experience').Value = (math.random(25,100)*__skill)-self.Score
			for sk=0,4
				var skill
				var expp
				skill = RPG.GetChar(ch).Points("SKILLLVL"..sk)
				expp  = RPG.GetChar(ch).Points("SKILLEXP"..sk)
				if skill.Have>0
					skill.Have = 1
					expp.Have = 6/__skill
				end
			end
		end
		#+ self.FloorsReset self.LayerNum
		NIL.Use("Script/Auto/SwapKill.nil")
		Field.LoadMap("TrueAbyss_01")		
		Map.GoToLayer("#000","Start")
		self.Score = self.LayerNum + self.FloorsReset
		gv.Bool.RESPAWN_INITIATED = false
	end
	
	// Boss
	void BOSS()
		StartCombat.StartSession()
		// Music
		switch self.LayerNum
			case 20
				StartCombat.Music = "Music/Combat/Boss/UndeadBoss.wav"
			case 30
				StartCombat.Music = "Music/combat/boss/mountainking.wav"
			case 40 50 60 70
				StartCombat.Music = "Music/Combat/Boss/OrderOfOnyx.wav"
			default
				StartCombat.Music = "Music/Combat/Boss/Special.wav"
		end
		// Arena
		switch self.LayerNum
			case 20
				StartCombat.Arena = "Frundarmon"
			case 30
				StartCombat.Arena = "SparForest"
			case 40
				StartCombat.Arena = "Azquakunda"
			case 50
				StartCombat.Arena = "ShandaDung"
			case 60
				StartCombat.Arena = "Airom"
			default
				StartCombat.Arena = "Abyss"
		end
		switch self.LayerNum
			case 10
				for i=1,__skill
					StartCombat.Foe[i] = "Boss/BigTiger"
				end
			case 20
				StartCombat.Foe[1] = "Boss/Abyss_SoulConsumer"
				if __skill==3
					StartCombat.Foe[2] = "Boss/Abyss_SoulConsumer"
				end
			case 30
				StartCombat.Foe[1] = "Boss/MountainKing"
			case 40
				StartCombat.Foe[1] = "Boss/Abyss_Aldarus"
			case 50
				StartCombat.Foe[1] = "Boss/Abyss_Jeracko"
			case 60
				StartCombat.Foe[1] = "Boss/Abyss_Kirana"
			case 70
				StartCombat.Foe[1] = "Boss/Abyss_Rondomo"
			case 80
				int kies
				kies = math.random(1,5)
				switch kies
					case 1
						for i=1,__skill*3
							StartCombat.Foe[i] = "Boss/Creep"
						end
					case 2
						StartCombat.Foe[1]="Boss/DoomSweeper"
					case 3
						for i=1,__skill
							StartCombat.Foe[i]="Boss/SuperPink"
						end
					case 4
						StartCombat.Foe[1]="Boss/LichKing"
					case 5
						StartCombat.Foe[1]="Boss/UberMummy"
					default
						error("Unknown boss number: "..kies)
				end
			default
				error(sprintf("I don't know what boss goes on floor #%03d!",self.LayerNum))
		end
		StartCombat.NoLose = false
		StartCombat.FoeIDDQD = false
		StartCombat.Ready()
	end
	
	void BOSSACHIEVEMENT()
		Achievements.Award(sprintf("ABYSS_BOSS%03d",self.LayerNum))
	end
	
	// Scharum
	void SCHARUMSTART()
		TempParty.Push()
		StartCombat.StartSession()
		StartCombat.Music = ScharumMusic
		switch self.LayerNum
			case 30
				StartCombat.Arena = "SparForest"
			default
				StartCombat.Arena = "Abyss"
		end
		StartCombat.Foe[1] = "Boss/Scharum"
		StartCombat.NoLose = true
		StartCombat.FoeIDDQD = false
		StartCombat.Ready()
	end
	
	void SCHARUMEND()
		TempParty.Pop()
		if gv.Bool.Victor
			if not Done["Scharum_"..Map.Leader]
				CSayF("Unlocking Scharum Ability for %s",Map.Leader)
			end
			MapText("SCHARUM_WIN")
		else
			MapText("SCHARUM_LOSE")
			RPG.GetChar(Map.Leader).Points("HP").Have = 1
		end
	end
	
	// EXP madness stop
	void EXP_NO_NEG()
		for _,ch in ipairs { "Eric","Irravonia","Brendor","Scyndi","Rebecca","Dernor","Merya","Aziella" }
			var p
			p = RPG.GetChar(ch).Stat("Experience")
			switch __skill
				case 1
					p.Value = math.max(p.Value,1)
				case 2
					p.Value = math.abs(p.Value)
				case 3
					if p.Have<0
						p.Value = math.abs(p.Value) * 2
					end
				default
					error("Unknown Skill Level")
			end
		end
	end
	
	// Init
	void CONSTRUCTOR()
		self.Score = self.LayerNum + self.FloorsReset
		KthuraGenerator.IgnoreDestroy("Plasma")
		for i=1,math.ceil(MaxTreasure/__skill)
			CSay("Ignore Treasure "..i)
			KthuraGenerator.IgnoreDestroy("RANDOMTREASURE_"..i)
		end
		KthuraGenerator.TexBottom   = "GFX/Textures/Abyss/Bottom.png"
		KthuraGenerator.TexPlatform = "GFX/Textures/Abyss/Top.png"
		KthuraGenerator.TexExit     = "GFX/Textures/Abyss/Exit2.png"
		KthuraGenerator.Size.X      = 6400
		KthuraGenerator.Size.Y      = 3200
		Map.TieGenerator()
		Map.ZA_Enter("ExitMap","ExitMap")
		Map.ZA_Enter("Boss","SASKIA:Boss")
		
		self.Cities = {"Doubline","Felixium","Frendor","Independence","Iskarderiu","Xenor"}
		self.General = {"Abyss","Airom","BlackDragon","Botanica","DeathCaves","ExamRuins","Frundarmon","Fruskbrando","Marshes","Morker","NakedRocks"}
		Map.ZA_Enter("Welcome","Conchita_Welcome")
		Map.ZA_Enter("EXP_NO_NEG","EXP_NO_NEG")
	end
	
	void Draw()
	end
	
	void Update()
		Map.Obj="Plasma"
		Map.ObjInt.X = Map.ScrollX
		Map.ObjInt.Y = Map.ScrollY
		if not self.plasmasized[Map.Layer]
			Map.ObjInt.W = Screen.W
			Map.ObjInt.H = Screen.H
		end
		Map.ObjInt.InsertX = math.floor(Map.ScrollX/10)
		Map.ObjInt.InsertY = math.floor(Map.ScrollY/10)
		if not self.MusicBegun
			self.StartMusic()
			self.MusicBegun = true
		end
	end
	
end
#say "Map Script - Compiling!"
