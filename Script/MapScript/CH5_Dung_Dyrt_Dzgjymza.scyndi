// License:
// **********************************************
// 
// src/Script/Script/MapScript/CH5_Dung_Dyrt_Dzgjymza.scyndi
// (c) Jeroen Broks, 2020, 2025, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// 
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// 
// version: 25.06.09
// 
// End License



Module

#use "Libs/SCI/Sys"
#use "Libs/SCI/Audio"
#use "Libs/SCI/GINIE"
#use "Libs/SCI/Kthura"
#use "Libs/SCI/Graphics"
#use "Libs/SCI/InterVar"

#use "Libs/Music"

#use "script/use/Need"
#use "Script/Use/Misc/StartCombatMod"
#use "Script/Use/MapScript/CircularDarkness"
#use "Script/Use/MapScript/Memory"

//#use "Script/use/Specific/CheckTrueAbyss"

extern SkipFight "false"

#macro maxsecrets 2
#macro CURRENT_KAMER self.KamerNames[Map.Layer]

#macro SKIP_DZGJYMZA false

// #macro ZO_GAAN_WE_SKIPPEN_OF_NIET if SKIP_DZGJYMZA Events.Annoy("Skipped boss fight!"); return; end


#accept MScript
plua bngpcheck=GINIE.LoadHomeNew("Config.ini","GlobCONFIG","Config.ini","Global Configuration\nThe Secrets of Dyrt\n(c) Jeroen P. Broks")
//	Allow_NGTA:=b.Value("Cast","Irravonia")=="6f96b2b3dae0379e9c0f1325b83fddd4"
//	Allow_NGPL:=b.Value("Cast","Scyndi")=="56dcd25b31538f9bc183f5b791a8cf45"

quickmeta MetaSwitch
	index
		return gv.Bool["DZGJYMZA_KEEP_SWITCH_DONE."..(Upper(key))]
	end
	
	newindex
		gv.Bool["DZGJYMZA_KEEP_SWITCH_DONE."..(Upper(key))] = value
		for _,n in pairs { "Jeracko","Rondomo","Aldarus","Kirana" }
			if ! MetaSwitch[n]
				CSayF("Exiting: Switch for %s not yet flipped!",n)
				return				
			end
			CSayF("Continueing: Switch for %s has been flipped",n)
		end
		// error("Big doors in the main hall not yet scripted")
		string l
		l = Map.Layer
		Map.Layer="#001"
		Map.Kill("Deur",true)
		Map.Layer = l
	end
end


group MScript
	
	table KamerKop
	table KamerNames
	
	var Font
	
	get string Kamer
		if (! CURRENT_KAMER) || prefixed(CURRENT_KAMER,"END")
			return ""
		end
		// assert(CURRENT_KAMER,"No data for area: "..Map.Layer)
		KamerKop[CURRENT_KAMER] = KamerKop[CURRENT_KAMER] || Font.iText(CURRENT_KAMER)
		return CURRENT_KAMER
	end
	
	//link Switch = MetaSwitch
		
	void SWITCH_JERACKO()
		MetaSwitch.Jeracko = true
	end
	
	void SWITCH_ALDARUS()
		MetaSwitch.Aldarus = true
	end
	
	void SWITCH_KIRANA()
		MetaSwitch.Kirana = true
	end
	
	void SHOWSECRET(int i)
		Map.ShowByLabel("SECRET"..i)
	end
	
	void HIDESECRET(int i)
		Map.HideByLabel("SECRET"..i)
	end
	
	link DarkDraw = CircularDarkness.Draw1
	//__StyleStretch
	
	// Memory puzzle
	delegate NPC_MEMORY1
	delegate NPC_MEMORY2
	delegate NPC_MEMORY3
	delegate NPC_MEMORY4
	delegate NPC_MEMORY5
	delegate NPC_MEMORY6
	delegate NPC_MEMORY7
	delegate NPC_MEMORY8
	delegate NPC_MEMORY9
	delegate NPC_MEMORY10
	delegate NPC_MEMORY11
	delegate NPC_MEMORY12
	delegate NPC_MEMORY13
	delegate NPC_MEMORY14
	delegate NPC_MEMORY15
	delegate NPC_MEMORY16
	
	link DoneMemory = gv.Bool.Done_DarkStorage_Rondomo_MemoryPuzzle
	
	// Memory
	void RESETMEMORY()
		if MetaSwitch.Rondomo
			return
		end
		Memory.Mem_Init(self,{"Eric","Irravonia","Brendor","Scyndi","Dernor","Merya","Rebecca","Aziella"})
	end
	
	link MEMORYCYCLE = Memory.Cycle
	
	void MemoryPuzzleSolved()
		Audio.Load("SFX/Puzzle/Solved.wav","PUZZLE_SOLVED").Play()
		Map.Kill("StartPuzzle",true)
		self.KILLMEMORY()
		Party.LvUp()
	end
	
	void KILLMEMORY()
		for i=1,16
			Map.Kill("NPC_MEMORY"..i,true)
		end
		MetaSwitch.Rondomo = true
	end
	// End Memory
	
	void SANCTUARY()
		Music.Play("Music/Dungeon/WeniariasTemple.wav")
	end
	
	void LEAVESANCTUARY()
		Music.Play("Music/Dungeon/Dzgjymza.wav")
	end
	
	void NPC_WENIARIA()
		if ! Done.Weniaria_in_DzgjymzaKeep_In_Dyrt
			MapScript.SASKIA("Weniaria")
			Map.Layer="#009"
			Map.Kill("DeurDzgjymza",true)
			Map.Layer="#010"
		else
			MapText("WENRECOVER")
		end
		for i=1,8
			var c
			c = RPG.GetChar(RPG.Party[i])
			c.Points( "HP").Have = c.Points( "HP").Maximum
			c.Points("VIT").Have = c.Points("VIT").Maximum		
		end
	end
	
	void NPC_DZGJYMZA()
		MapScript.SASKIA("Dzgjymza")
	end
	
	void DZGJYMZA_START1()
		CSay("Let's start round #1")
		//ZO_GAAN_WE_SKIPPEN_OF_NIET
		if SkipFight; return; end
		// error("First Dzgjymza fight not yet scripted")
		StartCombat.StartSession()
		StartCombat.Music = "Music/Combat/Boss/Dzgjymza_Human.wav"
		StartCombat.Arena = "Dzgjymza"
		StartCombat.Foe[1] = "Boss/Dzgjymza1"
		StartCombat.NoLose = false
		StartCombat.FoeIDDQD = false
		StartCombat.Ready()
	end
	
	void DZGJYMZA_START2()
		CSay("Let's start round #2")
		//ZO_GAAN_WE_SKIPPEN_OF_NIET
		if SkipFight; return; end
		// error("Second Dzgjymza fight not yet scripted")
		StartCombat.StartSession()
		StartCombat.Music = "Music/Combat/Boss/Dzgjymza_God.wav"
		StartCombat.Arena = "Plasma"
		StartCombat.Foe[1] = "Boss/Dzgjymza2"
		StartCombat.NoLose = false
		StartCombat.FoeIDDQD = false
		StartCombat.Ready()
	end
	
	void BANGSET(string o)
		int x
		int y
		//Map.Obj = o
		//x = Map.ObjInt.x
		//y = Map.ObjInt.y
		//Map.Obj = "OnyxBang"
		//Map.ObjInt.x = x
		//Map.ObjInt.y = y
		Kthura.Obj.OnyxBang.X = Kthura.Obj[o].X
		Kthura.Obj.OnyxBang.Y = Kthura.Obj[o].Y
		CSayF("Coordinates for OnyxBang set to (%04d,%04d)",x,y)
	end
	
	void BLENCHY_FADE()
		gv.Int.FadeBlenchy -= 2
		for i=0,9
			//Map.Obj = "DS"..i
			//Map.ObjInt.Alpha = gv.Int.FadeBlenchy
			Kthura.Obj["DS"..i].Alpha = gv.Int.FadeBlenchy
		end
		//CTA.Unlocked_NewGamePlus = true
		bngpcheck.Value("Cast","Scyndi","56dcd25b31538f9bc183f5b791a8cf45")
	end
	
	void ENDACHIEVEMENT()
		Achievements.Award("ZZZ_FINISH"..__skill)
	end
	
	int  LoveLoop=30
	int  LoveDone=11
	bool LoveFlits
	bool LoveDrawn
	void LOVE()
		if ! self.LoveDrawn
			return
		end
		LocExtern Bliksem "Scyndi.Class.Kthura.Obj.Bliksem"

		if (self.LoveDone>11 || self.LoveLoop<=0) && (not self.LoveFlits)
			if self.LoveDone<=0 || (self.LoveDone<5 && math.random(0,self.LoveDone)==1)
				gv.Bool.EndLoveStop=true
				return
			end
			--LoveDone
			LoveLoop = math.random(20,30)
			//Map.Obj="Bliksem"
			Bliksem.X = math.random(300,500)
			Bliksem.Rotation = math.random(0,90)-45
			Bliksem.R = math.random(0,255)
			Bliksem.G = math.random(0,255)
			Bliksem.B = math.random(0,255)
		end
		LoveFlits = ! LoveFlits
		//Map.Obj="Bliksem"
		Bliksem.Visible = self.LoveFlits
		self.LoveDrawn = false
		--self.LoveLoop
	end		
	
	void Draw()
		if Map.Layer!="#010" && (! prefixed(Map.Layer,"END"))
			self.DarkDraw()
		else
			self.LoveDrawn = true
		end
		__yellow
		if self.Kamer!=""
			self.KamerKop[self.Kamer].Draw(math.floor(Graphics.W/2),5,2,0)
		end		
	end
	
	void Update()
	end
	
end



Init
	UseKettingKaart()
	MScript.Font = GetFont("BIGTEXT")
	MScript.KamerNames = {}
	MScript.KamerNames["#000"] = "Lobby"
	MScript.KamerNames["#001"] = "Grand Hall"
	MScript.KamerNames["#002"] = "Upstairs Corridor"
	MScript.KamerNames["#003"] = "Wanda's bedroom"
	MScript.KamerNames["#004"] = "Lord Dzgjymza's bedroom"
	MScript.KamerNames["#005"] = "Jeracko's bedroom"
	MScript.KamerNames["#006"] = "Rondomo's bedroom"
	MScript.KamerNames["#007"] = "Aldarus' bedroom"
	MScript.KamerNames["#008"] = "Kirana's bedroom"
	MScript.KamerNames["#009"] = "Passage"
	MScript.KamerNames["#010"] = "Sanctuary"
	MScript.KamerNames["#011"] = "Audience Chamber"
	for i=1,maxsecrets
		Map.ZA_Enter("SECRET"..i,"SHOWSECRET",i)
		Map.ZA_Leave("SECRET"..i,"HIDESECRET",i)
	end
	Map.ZA_Enter("StartPuzzle","ResetMemory")
	Map.ZA_Enter("Sanctuary","Sanctuary")
	Map.ZA_Leave("Sanctuary","LeaveSanctuary")
End
