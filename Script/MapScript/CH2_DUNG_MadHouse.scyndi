// License:
// **********************************************
// 
// src/Script/Script/MapScript/CH2_DUNG_MadHouse.scyndi
// (c) Jeroen Broks, 2020, 2021, 2022, 2025, All Rights Reserved.
// 
// This file contains material that is related
// to a storyline that is which is strictly
// copyrighted to Jeroen Broks.
// 
// This file may only be used in an unmodified
// form with an unmodified version of the
// software this file belongs to.
// 
// You may use this file for your study to see
// how I solved certain things in the creation
// of this project to see if you find valuable
// leads for the creation of your own.
// 
// Mostly this file comes along with a project
// that is for most part released under an
// open source license and that means that if
// you use that code with this file removed
// from it, you can use it under that license.
// Please check out the other files to find out
// which license applies.
// 
// This file comes 'as-is' and in no possible
// way the author can be held responsible of
// any form of damages that may occur due to
// the usage of this file
// 
// 
// **********************************************
// 
// 
// version: 25.05.07 II
// 
// End License




Script

#use "Libs/SCI/Sys"
#Use "Libs/SCI/Medals"
#use "Libs/SCI/InterVar"


#use "script/use/Need"
#use "Script/Use/Misc/StartCombatMod"

bool Medal_checked
bool gjout_checked

group MScript
	
	void Fader(string p)
		string do_it
		//do_it = sprintf("Fader(trim('%s'))",p)
		//LuaDoString("FLOW_FIELD",do_it,"Call flow: FIELD")
		Sys.Call("FLOW_FIED","Fader","The Mad House")
	end
	
	void NPC_HOUSE()
		self.Fader("The Mad House")
		Map.GoToLayer("#001","Start")
	end
	
	void Medal_OPEN_FUCKYOU()
		//var GJ
		//if (not gv.Bool.GameJolt) or Medal_checked
		//	return
		//end
		//CSayF("gvgj%s",tostring(gv.Bool.GameJolt))
		//CSayF("chek%s",tostring(Medal_checked))
		//CSayF("fail%s",tostring(Medal_failed()))
		//if (not gv.Bool.GameJolt) or Medal_checked or (Medal_failed())
		//	return
		//end

		//Medal_checked = true
		//GJ = NIL.Use("Secu/Include/GJSecret.nil")
		//if not GJ
		//	Annoy("Unfortunately I failed to contact Game Jolt, so I could not open the secret passage tied to this area!\n\n- Is your internet connection okay?\n- You never changed your credentials on Game Jolt?\n-Is Game Jolt up and running?\n\nIf you want to try again, leave this dungeon and come back later!")
		//	return
		//end
		//if GJ.ImpureRatio>=36
		//	Map.Kill("Medal_Barrier")
		//end
		Lua.error("Medal_OPEN_FUCKYOU called. Purpose unclear")
	end
	
	void Medal_OPEN()
		LocExtern WantRatio "36"
		CSayF("Medal ratio: %05.1f%%; must be at least:%03d%%",MedalRatio,WantRatio)
		if MedalRatio>=WantRatio
			Map.Kill("MedalBarrier",false)
			CSayF("-> Open Sesame!")
		End
		medal_checked=true
	end

	
	void Medal_ALWAYSOPEN()
		if not Medal_checked
			Map.Kill("Medal_Barrier")
			Medal_checked = true
		end
	end
	
	void Medal_WARP()
		Field.LoadMap("Medal_Dung_Facility")
		Map.GoToLayer("#001","Start")
	end
	
	void REMFAC1()
		CSay(tostring(Done.FacilityPortal1))
		if not gjout_checked
			Map.Kill("Bars1",true)
			gjout_checked = true
		end
	end
	void REMFAC2()
		CSay(tostring(Done.FacilityPortal2))
		if not gjout_checked
			Map.Kill("Bars2",true)
			gjout_checked = true
		end
	end
	void REMFAC3()
		CSay(tostring(Done.FacilityPortal3))
		if not gjout_checked
			Map.Kill("Bars3",true)
			gjout_checked = true
		end
	end
	void RECHECK()
		if (not gjout_checked) and (gv.Bool.GameJolt)
			for i=1,3
				if gv.Bool["FacilityPortal"..i]
					self["REMFAC"..i]()
				end
			end
			gjout_checked = true
		end
	end
	void TOFAC1()
		Field.LoadMap("Medal_DUNG_Facility")
		Map.GoToLayer("#999","NPC_Trans_SPOT")
	end
	void TOFAC2()
		Field.LoadMap("Medal_DUNG_Facility2")
		Map.GoToLayer("#018","NPC_Trans_SPOT")
	end
	void TOFAC3()
		Field.LoadMap("Medal_DUNG_Facility2")
		Map.GoToLayer("#024","NPC_Trans_SPOT")
	end
	
	void TOGAMEJOLTOPVANG()
		Map.GoToLayer("#999","Start")
	end
	
	void TOMAIN()
		Map.GoToLayer("#002","FromGameJoltOpvang")
		if not Done.GJOPVANGBARRIERREMOVEDINMADHOUSE
			Map.Kill("Medal_Dicht",true)
		end
	end
	
	void MORGUE()
		for i=1,8
			string m
			m = RPG.Party[i]
			if m and m!="" and m!="Kirana" 
				Map.Show("Dead_"..m)
				CSayF("Showing %s as dead character!",m)
			end
		end
	end
	
	void BACKTOSTART()
		Map.GoToLayer("#001","Start")
	end
	
	void LEAVEHOUSE()
		Map.GoToLayer("OUTSIDE","NPC_House_SPOT")
	end
	
	void COMPLETE()
		Achievements.Award("SECDUNG_MADHOUSE")
	end
	
	void BOSS()
		StartCombat.StartSession()
		StartCombat.Music = "Music/Combat/Boss/Reg.Wav"
		StartCombat.Arena = "MadHouse"
		StartCombat.Foe[1] = "Boss/Creep"
		StartCombat.NoLose = false
		StartCombat.FoeIDDQD = false
		StartCombat.Ready()
	end
	
	void LEAVE()
		Field.LoadMap("CH2_HUB_XROADS")
		Map.GoToLayer("XROADS","FromMadhouse")
	end
	

	
	void Draw()
	end
	
	void Update()
	end
	
end


Init
		Map.ZA_Enter("Medal_Open","Medal_Open")
		Map.ZA_Enter("Medal_AlwaysOpen","Medal_AlwaysOpen")
		Map.ZA_Enter("GJWARP","GJWARP")
		for i=1,3
			Map.ZA_Enter("RemBars"..i,"RemFac"..i)
		end
		Map.ZA_Enter("OutRecheck","RECHECK")
		Map.ZA_Enter("ToFac1","TOFAC1")
		Map.ZA_Enter("ToFac2","TOFAC2")
		Map.ZA_Enter("ToFac3","TOFAC3")
		Map.ZA_Enter("ToGameJoltOpvang","ToGameJoltOpvang")
		Map.ZA_Enter("ToMain","ToMain")
		Map.ZA_Enter("Morgue","Morgue")
		Map.ZA_Enter("BackToStart","BackToStart")
		Map.ZA_Enter("LeaveHouse","LeaveHouse")
		Map.ZA_Enter("Complete","Complete")
		Map.ZA_Enter("Boss","SASKIA:Boss")
		Map.ZA_Enter("Leave","Leave")
End
