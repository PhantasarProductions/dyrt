// License Information:
// src/Tricky Script/Script/Use/Anyway/MapScript_h.nil
// Version: 20.05.17
// Copyright (C) 2019, 2020 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

#use "libs/strings"

global table MapScript

void StartSaskia(string script,string label)
	// error("SASKIA start not yet implemented!")
	LuaDoString("FLOW_FIELD",sprintf("FlowField.Map.Saskia.Start('%s')",label))
end

// This may look "clunky"  for a NIL script
// As this should have been done with a quickmeta
// But that feature didn't exist when I set this up
// And I am NOT game to do it now anyway, as that is needless work
// and you won't see the difference, anyway!

table MapMeta
MapMeta = {
	['__newindex'] = void()
		error("MapScript values cannot be defined");
	end,
	
	['__index'] = delegate(t,lk)
		string k 
		k = lk:upper()
		switch k
			case "SASKIA"
				return void(string label)
					StartSaskia("MAP",label)
				end
			default
				assert(StateExists("MAP"),"Map script call, but no map script was loaded!")
				if prefixed(k,"SASKIA:")
					MapScript.SASKIA(right(k,#k-7))
					return
				end
				#pure
				return function(...)
					local args = {...}
					local parm = "";
					for i,a in ipairs(args) do
						if (i>1) then parm = parm ..", " end
						--[[ This is the ultimate example of how NOT to use NIL :-P
						#endpure
						string a
						string parm
						int i
						#pure
						]]
						#endpure
						switch type(a)
							case "nil" "boolean" "number"
								parm = parm .. tostring(a)
							case "string"
								parm = parm .. '"'..a..'"'
							default
								error("MapScript Chain Invalid Type: "..type(a).." (param #"..i..")")
						end
						#pure
					end
					CSayF("MapScript.%s(%s)",k,parm)
					LuaDoString("MAP",sprintf("MScript.%s(%s)",k,parm),"LINK: MapScript")
				end
				#endpure
				// Pure code was needed as I couldn't yet get NIL to support '...'
		end
	end,
		
	['__call'] = void(string f,infinity)
		self[f](infinity)
	end
}

setmetatable ( MapScript, MapMeta )

return MapScript